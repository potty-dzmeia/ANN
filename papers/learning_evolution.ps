%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 14 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /Helvetica FMFONTDEFINE
2 0 /Helvetica-Oblique FMFONTDEFINE
3 0 /NewCenturySchlbk-Roman FMFONTDEFINE
4 0 /NewCenturySchlbk-Italic FMFONTDEFINE
5 0 /Times-Roman FMFONTDEFINE
6 0 /Times-Italic FMFONTDEFINE
7 0 /AvantGarde-DemiOblique FMFONTDEFINE
8 0 /Helvetica-BoldOblique FMFONTDEFINE
9 0 /Helvetica-Narrow-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 .1 FMFILL
2 .3 FMFILL
3 .5 FMFILL
4 .7 FMFILL
5 .9 FMFILL
6 .97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 .9 FMFILL
18 .7 FMFILL
19 .5 FMFILL
20 .3 FMFILL
21 .1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
72 72 540 720 R
7 X
0 K
V
0 19 Q
0 X
(Learning and evolution) 201.5 556.33 T
(in neural networks) 222.07 531.33 T
1 15 Q
(Stefano Nolfi) 263.06 484 T
2 12 Q
(Istituto di Psicologia) 253.01 467 T
(National Research Council \050CNR\051) 216.37 451 T
(Rome, Italy) 275.67 435 T
(stiva@irmkant.bitnet) 251.59 419 T
1 15 Q
(Jeffrey L. Elman) 251.82 383 T
2 12 Q
(Department of Cognitive Science) 218.35 366 T
(University of California, San Diego) 214.69 350 T
(La Jolla, California 92093-0515) 223.01 334 T
(elman@crl.ucsd.edu) 251.26 318 T
(619-534-1147) 268.67 302 T
1 15 Q
(Domenico Parisi) 251.41 266 T
2 12 Q
(Istituto di Psicologia) 253.01 249 T
(National Research Council \050CNR\051) 216.37 233 T
( Rome, Italy) 274.01 217 T
(domenico@irmkant.bitnet) 237.93 201 T
1 F
(\050Correspondance should be addressed to the second author\051) 72 81 T
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-2-) 298.67 36 T
108 189 512.64 720 R
7 X
V
0 14 Q
0 X
(ABSTRACT) 271.85 594.67 T
3 12 Q
0.71 ( In this report we present the results of a series of simulations in) 144 556 P
-0.09 (which neural networks undergo change as a result of two forces: learning) 108 540 P
2.7 (during the "lifetime" of a network, and evolutionary change over the) 108 524 P
-0.18 (course of several "generations" of networks. The results demonstrate how) 108 508 P
-0.1 (complex and apparently purposeful behavior can arise from random vari-) 108 492 P
0.78 (ation in networks. We believe that these results provide a good starting) 108 476 P
1.42 (basis for modeling the more complex phenomena observed in biological) 108 460 P
-0.24 (systems. A more specific problem for which our results may be relevant is) 108 444 P
-0.05 (determining the role of behavior in evolution \050Plotkin, 1988\051; that is, how) 108 428 P
0.12 (learning at the individual level can have an influence on evolution at the) 108 412 P
-0.21 (population level within a strictly Darwinian \321 not Lamarckian \321 frame-) 108 396 P
(work.) 108 380 T
(Keywords:   learning, evolution, neural networks, artificial life) 108 206 T
FMENDPAGE
%%EndPage: "2" 3
%%Page: "3" 3
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-3-) 298.67 36 T
72 72 540 720 R
7 X
V
0 F
0 X
(INTRODUCTION) 260.03 712 T
3 F
-0.25 (Research in recent years has shown that artificial neural networks have many) 108 694 P
0.38 (of the characteristics found in biological organisms, including humans \050e.g., Hanson) 72 678 P
0.53 (& Olson, 1990\051. There also remain a number of behaviors for which neural network) 72 662 P
0.67 (models have yet to provide good accounts. At first glance, one might argue that the) 72 646 P
-0.71 (most striking deficiency is that the fundamentally statistical nature of network learn-) 72 630 P
0.16 (ing algorithms provides little insight into the seemingly purposeful nature of almost) 72 614 P
1.24 (all biological systems. Networks are capable of learning very high-order statistical) 72 598 P
0.56 (correlations that are present in a training environment; and very importantly, they) 72 582 P
0.3 (provide a powerful and attractive mechanism for generalizing behavior to new envi-) 72 566 P
0.41 (ronments. Yet in some sense they are essentially passive. This passivity and lack of) 72 550 P
-0.14 (purpose lie in sharp contrast with organisms for whom endogenous goals play an im-) 72 534 P
(portant role in determining behavior.) 72 518 T
-0.76 (One can, of course, construct a network to simulate a set of goals. Miyata \0501988\051) 108 498 P
-0.3 (describes a problem in which constraint satisfaction can be used within a connection-) 72 482 P
-0.13 (ist model to achieve certain prespecified goals. For certain research programs, this is) 72 466 P
1.18 (a reasonable and useful strategy.  But it  begs the question: Where do these goals) 72 450 P
(come from originally?  Who does the original network construction?) 72 434 T
-0.7 (When one considers this question in the context of biological organisms, the an-) 108 414 P
0.11 (swer is not difficult to find. There is no design process. The biological construction is) 72 398 P
0.09 (the result of evolutionary processes. Genetic variation and natural selection interact) 72 382 P
1.05 (to produce organisms which display behaviors that are, on the whole, conducive to) 72 366 P
-0.51 (perpetuation of the species. The most basic goals \321 instincts \321 arise from essentially) 72 350 P
1.22 (a random walk through what Dawkins \0501987\051 has fancifully called \324biomorphland\325.) 72 334 P
1.15 (The infant that fails to suckle or the animal that fails to forage for food is quickly) 72 318 P
-0.25 (pruned from the family tree.  By this account the advent of many behaviors is merely) 72 302 P
1.03 (fortuitous, and reinforced  by natural selection. This suggests that the appropriate) 72 286 P
0.42 (mechanism for developing goals and purposeful behavior in neural networks should) 72 270 P
-0.44 (be an evolutionary process, rather than either) 72 254 P
4 F
-0.44 (a priori) 327.01 254 P
3 F
-0.44 ( hard-wiring or explicitly train-) 368.3 254 P
(ing to produce goal-directed activity.) 72 238 T
-0.76 (This is the approach we have taken in the work which we now describe. We pro-) 108 218 P
1.03 (vide a mechanism for networks to change from one generation to the next; and we) 72 202 P
0.86 (structure the environment in such a way that there is pressure on the networks to) 72 186 P
0.43 (solve a problem. We do not specify the form of the solution; that is to be worked out) 72 170 P
(through genetic variation and natural selection.) 72 154 T
0 F
(THE PROBLEM) 262.36 132 T
3 F
0.55 (Let us begin by assuming that our ultimate goal is to create an organism \050O\051) 108 114 P
-0.67 (that is able to find  and eat food in its environment.  We imagine that O\325s environment) 72 98 P
1.4 (is a two-dimensional  grid-world. At any particular moment O occupies one of the) 72 82 P
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 4
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-4-) 298.67 36 T
72 72 540 720 R
7 X
V
3 F
0 X
-0.51 (cells. A number of food units are randomly distributed in the environment with a food) 72 712 P
-0.56 (unit occupying a single cell. O has a "face".  We shall imagine that it is has a rudimen-) 72 696 P
-0.32 (tary sensory system that allows it to receive as input from the environment the angle) 72 680 P
-0.61 (\050relative to where it is currently facing\051 and the distance to the nearest food.  We shall) 72 664 P
0.27 (also equip O with a simple motor system that provides it with a repertory composed) 72 648 P
-0.06 (of four different actions. O may turn 90 degrees  right, turn  90 degrees  left, move to) 72 632 P
0.16 (the next cell in the facing direction, or stay still. Finally, when O happens to step on) 72 616 P
-0.19 (a food cell,  it eats the food contained in it \050and the food disappears\051. O shall be dumb) 72 600 P
(to the extent that it is not aware when it eats.) 72 584 T
-0.61 (We are interested in the question of how it is that O might come to develop pur-) 108 564 P
1.05 (poseful behavior. Once inserted into an environment such as that described above,) 72 548 P
-0.44 (how might O learn to actively seek out food in an efficient manner?  \050We will measure) 72 532 P
0.07 (efficiency simply by measuring the number of food pellets eaten divided by the num-) 72 516 P
-0.5 (ber of actions. Thus if an O eats, on  average,  every 10 actions,  it is less efficient then) 72 500 P
(another  O that eats every 5 actions.\051) 72 484 T
4 F
(\321 Insert Figure 1 about here \321) 219.06 460 T
3 F
-0.8 (Let us begin by simulating O\325s nervous system with a feedforward network con-) 108 436 P
0.13 (sisting of three layers \050Figure 1\051. The input layer contains 2 nodes which receive the) 72 420 P
-0.02 (sensory information from the environment and another 2 nodes that receive proprio-) 72 404 P
1.25 (ceptive information indicating O\325s current movement. These 4 nodes are fully con-) 72 388 P
-0.79 (nected to an intermediate \050\322hidden\323\051 layer of 7 nodes; the 7 hidden units are connected) 72 372 P
-0.26 (to 2 output units which will indicate O\325s next movement. Sensory input is encoded by) 72 356 P
-0.68 (2 units representing the angle and distance to the nearest food \050values scaled from 0.0) 72 340 P
-0.31 (to 1.0\051. Movement is encoded in a binary fashion, such that 2 units represent the four) 72 324 P
-0.53 (possible actions \05000 = halt; 01 = right; 10 = left; 11 = forward; the actual analog values) 72 308 P
-0.74 (produced by the network will be thresholded to the nearest binary value\051 The network) 72 292 P
(is initially assigned random weights on its connections.) 72 276 T
0.67 (Thus if O is placed in the sort of environment described above, a sequence of) 108 256 P
0.12 (events will occur. Sensory input is received on two of the input nodes, and the previ-) 72 240 P
-0.14 (ous action \050initially chosen at random\051 is received by the other two input nodes. Acti-) 72 224 P
-0.64 (vation flows up through the hidden units, and from the hidden units to the two output) 72 208 P
0.56 (nodes. The \050thresholded\051 values on the output layer are then used to move O in the) 72 192 P
(indicated direction, and the next cycle begins.) 72 176 T
-0.09 (Clearly, given these starting conditions, O\325s eating ability will be random and,) 108 156 P
0.6 (assuming food is not plentiful in the environment, not very great. O will move hap-) 72 140 P
0.87 (hazardly through its environment, eating food once in a while when it happens, by) 72 124 P
0.4 (chance, to step on a food cell. In no reasonable sense could we say that O\325s behavior) 72 108 P
(was intelligent or purposeful.) 72 92 T
FMENDPAGE
%%EndPage: "4" 5
%%Page: "5" 5
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-5-) 298.67 36 T
72 72 540 720 R
7 X
V
3 F
0 X
0.23 (One way of having O develop a better eating ability would be to use a connec-) 108 712 P
0.62 (tionist learning algorithm \050such as backpropagation of error, Rumelhart, Hinton, &) 72 696 P
-0.34 (Williams, 1986\051 to teach the network to select the  appropriate actions and sequences) 72 680 P
-0.09 (of actions when O finds itself in a specific position relative to a food unit. When O se-) 72 664 P
-0.29 (lects a particular action with the nearest food in a particular position \050i.e. angle + an-) 72 648 P
-0.3 (gular distance\051 with respect to O, and this action is wrong, the teaching input signals) 72 632 P
0.12 (the correct action so that the network can use the error to gradually change the con-) 72 616 P
(nection weights and improve performance.) 72 600 T
-0.51 (However, this solution is the one we rejected at the beginning of this paper. We) 108 580 P
-0.06 (do not want to explicitly teach the network how to eat, since it seems highly unlikely) 72 564 P
-0.13 (that nature provides most species with a \322teacher\323 that gives individuals feedback at) 72 548 P
-0.67 (each step and leads them to correct performance. Furthermore, the optimal strategies) 72 532 P
0.6 (may be unclear, especially if the environment is complex.  It would be preferable to) 72 516 P
-0.46 (make it possible for the network itself to develop useful eating strategies, rather than) 72 500 P
(seeing if it could learn a particular strategy chosen by us.) 72 484 T
1.22 (Another way of teaching a network to approach food which is perhaps more) 108 464 P
-0.02 (plausible has been used by Cecconi and Parisi \0501989\051. O\325s are allowed to roam at will) 72 448 P
0.63 (in the environment. Whenever an O happens to step on a food unit its spontaneous) 72 432 P
-0.3 (behavior ceases. The O is re-positioned in the cell where it was 8 time steps previous-) 72 416 P
0.03 (ly.  The O repeats its actions, but this time it receives feedback which teaches it how) 72 400 P
(to get to the food cell.) 72 384 T
-0.22 (However, in the work that follows we took a different approach.  We wanted to) 108 364 P
1.74 (develop O\325s with purposeful behavior by using natural selection \321 in a sense, by) 72 348 P
0.31 (\322breeding\323 networks. The idea was to see whether a population of randomly varying) 72 332 P
1.14 (O\325s that was allowed to reproduce, with  a selection agency and random variation,) 72 316 P
-0.29 (would result in a final population whose behavior was non-random and, to all intents) 72 300 P
(and appearances, purposeful.) 72 284 T
0 F
(Simulation 1) 270.34 262 T
3 F
0.6 (In our first simulation we began with 100 O\325s, each with the architecture de-) 108 244 P
-0.5 (scribed above \050i.e., 4 inputs, 7 hidden units, 2 outputs\051.  Each of the 100 networks was) 72 228 P
(assigned a different random set of weights. We called this Generation 0 \050G0\051.) 72 212 T
0.16 (G0  networks  were  allowed  to \322live\323 for 20 epochs, where an epoch consisted) 108 192 P
0.36 (of 250 actions in 5 different environments \05050 actions in each\051 for a total of 5000 ac-) 72 176 P
0.68 (tions.  The environments consisted of a grid of 10 x 10 cells; 10 pieces of  food were) 72 160 P
-0.41 (randomly distributed throughout the grid. The O\325s were placed in individual copies of) 72 144 P
(these worlds \050that is, they developed in isolation\051.) 72 128 T
0.22 (At each time step, the input layer was activated in the manner described ear-) 108 108 P
0.34 (lier, with 2 units receiving sensory information regarding the location of food, and 2) 72 92 P
-0.53 (units receiving proprioceptive information indicating the already planned movement.) 72 76 P
FMENDPAGE
%%EndPage: "5" 6
%%Page: "6" 6
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-6-) 298.67 36 T
72 72 540 720 R
7 X
V
3 F
0 X
0.51 (The input units activated the hidden units, which in turn drove the motor response) 72 712 P
-0.49 (in the manner described above, with the result that each O moved at random through) 72 696 P
0.21 (the world. \050O\325s were allowed go outside the 10 x 10 cells; however, there was no food) 72 680 P
0.31 (outside this space.\051 In this first simulation, there were no changes to the connection) 72 664 P
(weights during the lifetime of an O.) 72 648 T
1.27 (Since the 100 networks had different sets of random connection weights,  it) 108 628 P
0.03 (happened out that some O\325s ate more and some O\325s ate less during their lifetime.  At) 72 612 P
0.32 (the end of the period assigned to G0 \050that is after 5000 actions\051, O\325s were allowed to) 72 596 P
0.08 (reproduce.  However, not all O\325s reproduced.  The 20 O\325s which had accumulated the) 72 580 P
0.28 (most food in the course of their random movements were allowed to reproduce; each) 72 564 P
-0.65 (was permitted 5 offspring. These 100 \05020 x 5\051 new O\325s constituted the next generation,) 72 548 P
(G1.) 72 532 T
1.47 (Reproduction was accomplished by using the set of network weights from a) 108 512 P
0.73 (parent as the template for the child \050since these weights did not change during the) 72 496 P
0.54 (lifetime of the parent, the weights were the same those that the parent had started) 72 480 P
-0.07 (its own life with\051. In addition, mutations were introduced into the copying process. A) 72 464 P
-0.23 (mutation was obtained by selecting 5 weights at random and perturbing the weight\325s) 72 448 P
(value by some random value between +/-1.0.) 72 432 T
0.2 (After the G1 O\325s were created they were allowed to live for 5000 time periods,) 108 412 P
1.5 (following the same regimen as the preceding generation.  Behavior in G1 differed) 72 396 P
0.15 (slightly from that in G0 as a result of two factors.  First, the 100 O\325s in  G1 were off-) 72 380 P
-0.12 (spring of a subset of  O\325s from  G0.  Second, the offspring themselves differed slightly) 72 364 P
(from their parents because of the small random mutations in network weights.) 72 348 T
0.01 (These differences led to small differences in mean food eaten by the O\325s in G1.) 108 328 P
0.77 (At the  end of  their lifetime it was possible again to permit the 20 most successful) 72 312 P
(individuals in G1 each to reproduce 5 times, forming G2.) 72 296 T
0.84 (This process continued for 50 generations.  If one  looks at the eating ability) 108 276 P
-0.77 (\050i.e., mean food eaten\051 of successive generations of O\325s, one finds a continuous increase) 72 260 P
-0.37 (from G0 to G49. This increase actually conflates  two different measures.  There is an) 72 244 P
-0.02 (increase in the mean eating ability of entire generations \050100 individuals\051, and there) 72 228 P
-0.28 (is also an increase in the peak eating ability of  each  generation, i.e. the  eating  abil-) 72 212 P
0.33 (ity  of  the  best individual of that generation. Figure 2 shows the change in the two) 72 196 P
(measures from G0 to G49.) 72 180 T
4 F
(\321 Insert Figures 2 and 3 about here \321) 198.96 156 T
3 F
0.51 (The changes in behaviors which are summarized in Figure 2 can are also ap-) 108 132 P
-0.13 (parent through visual inspection of the movements of individual O\325s in different gen-) 72 116 P
0.03 (erations. Figure 3 shows the trajectory of a randomly selected O from G0. The move-) 72 100 P
-0.29 (ment pattern is typical. O\325s wander through the grid without any apparent goals. Oc-) 72 84 P
FMENDPAGE
%%EndPage: "6" 7
%%Page: "7" 7
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-7-) 298.67 36 T
72 72 540 720 R
7 X
V
3 F
0 X
-0.2 (casionally a food cell is traversed, but on average the amount of food collected is low.) 72 712 P
4 F
(\321 Insert Figure 4 about here \321) 219.06 688 T
3 F
0.6 (By G49 the pattern is quite different. Figure 4 shows the path of a randomly) 108 664 P
-0.26 (selected O from this final generation. Movement is almost always toward the nearest) 72 648 P
-0.65 (food, and the O frequently succeeds in consuming all the food in a given environment.) 72 632 P
0.14 ( In this simulation we have seen that differential reproduction combined with) 108 612 P
-0.15 (random mutation can led to networks which \322learn\323 \050over many generations\051 to solve) 72 596 P
0.3 (a problem. Subjectively, one has the impression that behavior during initial genera-) 72 580 P
1.2 (tions is random and undirected, whereas O\325s in later generations exhibit what ap-) 72 564 P
-0.37 (pears to be deliberate and purposeful behavior. This behavior is not taught explicitly,) 72 548 P
-0.6 (although it is a natural consequence of the selection mechanism.  This mechanism de-) 72 532 P
0.69 (pends on both differential reproduction and also random mutation.  Differential re-) 72 516 P
0.57 (production alone would result in an increase in mean  eating  ability  of  successive) 72 500 P
-0.14 (generations  but  no increase  in peak ability. Mutation is important because it intro-) 72 484 P
-0.14 (duces new variability into the pool for networks, and makes it possible to explore dif-) 72 468 P
0.09 (ferent strategies. Of course, some of these strategies will be inferior to existing ones;) 72 452 P
1.27 (it is then the differential reproduction  mechanism that retains the improvements) 72 436 P
(and eliminates the bad strategies.) 72 420 T
-0.02 (In this simulation there was no role for individual learning; change could only) 108 400 P
0.35 (occur through evolution. But individuals do undergo change during their lifetime as) 72 384 P
0.77 (a result of learning. In the next simulation we explore the interaction of individual) 72 368 P
(learning with evolution.) 72 352 T
0 F
(Simulation 2) 270.34 330 T
3 F
0.91 (In the first simulation, an evolutionary mechanism was used to develop net-) 108 312 P
-0.43 (works which exhibited a certain behavior. That behavior was innate in the sense that) 72 296 P
-0.24 (it was displayed from birth and did not require any learning. But in real animals, ex-) 72 280 P
-0.33 (cept for the simplest and most rigid behaviors or animals, behavior is not determined) 72 264 P
0.76 (by innate knowledge alone but results from the interaction of innate knowledge \050in) 72 248 P
1.17 (the current scenario, the weight matrix at birth\051 and learning \050changes of weights) 72 232 P
-0.68 (through experience\051. Several researchers have suggest that there is an interaction be-) 72 216 P
1.7 (tween innate knowledge and learning \050Waddington, 1942; Baldwin, 1896; Hinton,) 72 200 P
-0.35 (1987; Belew, 1989\051. In many cases, what is learned may be only indirectly relevant to) 72 184 P
0.39 (the pursuit of some endogenously determined behavior. What is learned may be not) 72 168 P
(the behavior itself, but may support the behavior.) 72 152 T
-0.2 (We are thus interested in whether there may be an useful interaction between) 108 132 P
0.13 (the evolution of the eating behavior in O\325s, and other, ostensibly unrelated, informa-) 72 116 P
(tion about the environment that is learned during life.) 72 100 T
-0.36 (In the current situation, even if there is not an explicit teacher which instructs) 108 80 P
FMENDPAGE
%%EndPage: "7" 8
%%Page: "8" 8
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-8-) 298.67 36 T
72 72 540 720 R
7 X
V
3 F
0 X
0.61 (the O\325s on the desirability of finding food, it is also true that the perceived environ-) 72 712 P
0.35 (ment does change as a consequence of the O\325s actions, and it is not implausible that) 72 696 P
(the networks might learn about such changes.) 72 680 T
-0.22 (More specifically, we can imagine that an O learns to predict what the sensory) 108 660 P
-0.01 (input will be at the next time step, given current sensory input from the world and a) 72 644 P
0.13 (motor output on its part. The O does not learn that specific motor outputs are either) 72 628 P
0.15 (good or bad, but simply that there are sensory consequences attendant upon specific) 72 612 P
0.22 (motions in the context of specific environmental inputs. While this training involves) 72 596 P
-0.31 (supervised learning, the information required for the teacher is itself available in the) 72 580 P
0.31 (environment; so one might think of this prediction task as an instance of self-super-) 72 564 P
(vised learning.) 72 548 T
0.13 (In order for the network to learn this task, it is necessary to modify the archi-) 108 528 P
-0.41 (tecture slightly so that there are additional output units on which the sensory predic-) 72 512 P
0.64 (tion can be made. As before, we have 4 input units: 2 input units which receive the) 72 496 P
0.39 (current sensory information about the location of the nearest food \050distance and an-) 72 480 P
-0.72 (gle\051 and another 2 which code the currently planned movement \050identical to the motor) 72 464 P
0.12 (output of the previous cycle\051. There are 7 hidden units, and now 4 output units. Two) 72 448 P
0.51 (units represent the motor output of the network, and the 2 new units represent the) 72 432 P
0.58 (O\325s prediction about what sensory input it will receive as a consequence of carrying) 72 416 P
-0.73 (out the currently planned movement. This second set of output units, but not the first,) 72 400 P
0.41 (can receive teaching input from the environment \050i.e., O\325s can see if their prediction) 72 384 P
-0.3 (is correct or not by comparing their expectations with the actual sensory input on the) 72 368 P
(next time cycle\051. The network architecture is shown in Figure 5.) 72 352 T
4 F
(\321 Insert Figure 5 about here \321) 219.06 328 T
3 F
0.4 (It is plausible to expect that the ability to predict how the input changes as a) 108 304 P
0.57 (function of movement \050an ability which is learned during an O\325s life\051 might be posi-) 72 288 P
-0.3 (tively related to the ability to hunt for food \050which is evolved over many generations\051.) 72 272 P
-0.04 (The interaction might go in both directions: Success at prediction would enhance the) 72 256 P
1 (evolution of the hunting behavior, and at the same time those individuals who are) 72 240 P
-0.27 (successful hunters will also be successful at learning to predict changes in their envi-) 72 224 P
(ronment.) 72 208 T
-0.1 (To investigate this interaction, we ran a second experiment which was similar) 108 188 P
0.16 (to the first, except that \050a\051 we used the network architecture shown in Figure 5; and) 72 172 P
0.86 (\050b\051 on each time cycle, the networks were modified slightly in accord with teaching) 72 156 P
(from the environment.) 72 140 T
-0.77 (After each movement, the output on the prediction units \050which are interpreted) 108 120 P
-0.22 (as the network\325s predictions of the angle and the distance of food on the next time cy-) 72 104 P
-0.38 (cle\051 were compared with the actual input from the world after the planned movement) 72 88 P
FMENDPAGE
%%EndPage: "8" 9
%%Page: "9" 9
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-9-) 298.67 36 T
72 72 540 720 R
7 X
V
3 F
0 X
-0.5 (was actually performed. The discrepancy constituted an error which was then used to) 72 712 P
0.15 (change the weights of the network using the backpropagation of error learning algo-) 72 696 P
(rithm \050Rumelhart, Hinton, and Williams, 1986\051.) 72 680 T
0.03 (The network was not taught to make motor outputs. Because there was no er-) 108 660 P
-0.7 (ror generated on the motor output units, only the weights connecting the hidden units) 72 644 P
0.82 (to the output prediction units \050i.e., those output units which did generate an error\051) 72 628 P
-0.12 (were changed, along with the weights  from the input units to the hidden units. Con-) 72 612 P
1.47 (nections from the hidden units to the motor units were never changed during the) 72 596 P
0.22 (course of a network\325s lifetime.  \050Connections subject to learning are shown in Figure) 72 580 P
-0.65 (5 with dotted lines. Connections with solid lines were not modified through learning.\051) 72 564 P
0.35 (All other parameters remained the same. Each O had a lifespan of 250 move-) 108 544 P
0.75 (ments in 5 different worlds \05050 movements in each world\051 for a total of 5000 move-) 72 528 P
0.32 (ments. At the end of a generation, those O\325s which had gathered the most food were) 72 512 P
0.44 (allowed to reproduce 5 offspring. As in the previous simulation, replicas were based) 72 496 P
1.2 (on the parent\325s network at the time of the parent\325s own creation. This means that) 72 480 P
-0.38 (none of the changes which occurred in the parent\325s weight matrix as a consequence of) 72 464 P
-0.44 (learning during its lifetime were transmitted to offspring. What was transmitted was) 72 448 P
(rather the potential for such changes.) 72 432 T
-0 (The results of this simulation are shown  in Figure 6 and 7, and are compared) 108 412 P
-0.62 (with the results of the first simulation. Figure 6 shows the peak performance and Fig-) 72 396 P
(ure 7 the average performance.) 72 380 T
4 F
(\321 Insert Figures 6 and 7 about here \321) 198.96 356 T
3 F
0.05 (As one can see, the simulation with learning on the prediction task yields bet-) 108 332 P
-0.27 (ter performances on the eating task even though what is learned during the life of an) 72 316 P
(O\325s is not inherited by its offspring.) 72 300 T
0.22 (If we now look at the eating performance during an O\325s life, we also find that,) 108 280 P
0.44 (especially after a few generations, the O\325s eat more in the last part than in the first) 72 264 P
-0.3 (part of their life. Figure 8 shows the average food eaten as a function of epochs of life.) 72 248 P
1.65 (Each curve shows the performance of a particular generation \050the number on the) 72 232 P
0.3 (right identifies the particular generation\051. The figure only shows the results every 5) 72 216 P
(generations.) 72 200 T
4 F
(\321 Insert Figure 8 about here \321) 219.06 176 T
3 F
-0.5 (From these results we can conclude that learning during life to predict how the) 108 152 P
-0.41 (input from the world changes with an O\325s movements helps in developing good eating) 72 136 P
-0.3 (strategies. But does the development of good eating strategies also help in the task of) 72 120 P
-0.05 (learning to predict? To obtain a direct answer to this question we could teach the O\324s) 72 104 P
0.61 (of the first simulation \050the one without learning\051 to predict and see if the O\325s of the) 72 88 P
FMENDPAGE
%%EndPage: "9" 10
%%Page: "10" 10
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-10-) 295.34 36 T
72 72 540 720 R
7 X
V
3 F
0 X
0.75 (first generation learn to predict faster than the O\325s of the last generation. Unfortu-) 72 712 P
-0.43 (nately, we cannot do exactly this based on the behavior that the networks themselves) 72 696 P
-0.64 (generate because the O\325s of the first generation and those of the last generation do not) 72 680 P
0.15 (have the same behavior \050they execute different movements in the same context\051 and) 72 664 P
0.27 (therefore the results of this test would not tell us much. More specifically, the O\325s of) 72 648 P
1.13 (the last generations tend to have more complex behaviors. Completely random O\325s) 72 632 P
-0.37 (such as those  in the first generation usually have limited action repertoires \050e.g.,  ex-) 72 616 P
0.89 (ecuting a single movement in all contexts\051, whereas the O\325s in the last generations) 72 600 P
0.96 (have developed more complex behaviors that allows them to eat \050see Fig. 3 and 4\051.) 72 584 P
-0.43 (And the kind of behavior that O\325s have can influence how much they learn from being) 72 568 P
(taught to predict.) 72 552 T
0.16 (To avoid this problem we trained O\325s from the first and the last generation by) 108 532 P
0.37 (selecting a list of actions and making them all carry out the same actions instead of) 72 516 P
0.3 (letting them move by themselves. \050The actions were actually chosen randomly.\051 The) 72 500 P
(results are shown in Figure 9.) 72 484 T
4 F
(\321 Insert Figure 9 about here \321) 219.06 460 T
3 F
0 (As this figure shows, the prediction error curve of the last generation is better) 108 436 P
-0.75 (than that of the first generation. That means that O\325s that have developed good eating) 72 420 P
(strategies learn to predict faster than those which haven\325t.) 72 404 T
-0.74 (Another way of investigating the question if the possession of good eating strat-) 108 384 P
0.15 (egies helps in learning to predict is to look at the behavior of the O\325s that are taught) 72 368 P
0.65 (to predict during their life. Even if the results of prediction learning during life are) 72 352 P
0.38 (not inherited, still networks could learn to predict faster if they have ancestors that) 72 336 P
-0.09 (have learned to predict. To see if this is true we must determine if the O\325s of the  last) 72 320 P
-0.14 (generation in the simulation with  learning learn to predict faster than the O\325s of the) 72 304 P
0.38 (first generation \050i.e., of random O\325s\051. However, even if we find that this the case, we) 72 288 P
-0.3 (can\325t know if this happens because the O\325s of the last generation have developed good) 72 272 P
-0.15 (eating strategies by evolution or because their ancestors have learned to predict dur-) 72 256 P
-0.18 (ing their life. In fact, we already know that developing eating strategies helps in pre-) 72 240 P
-0.35 (dicting. But if we find that the improvement in learning to predict is greater than the) 72 224 P
-0.69 (improvement that we have observed in the O\325s of the last generation in the simulation) 72 208 P
1.2 (without life learning, we might conclude that both the development of good eating) 72 192 P
-0.48 (strategies and the life learning of the preceding generations make the successive gen-) 72 176 P
-0.13 (erations learn to predict faster. That is actually what happens, as is shown in Figure) 72 160 P
(10.) 72 144 T
4 F
(\321 Insert Figure 10 about here \321) 215.73 120 T
0 F
(Parametric sensitivity) 244.01 96 T
3 F
0.73 (Running a simulations of the sort described above requires choosing settings) 108 78 P
FMENDPAGE
%%EndPage: "10" 11
%%Page: "11" 11
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-11-) 295.34 36 T
72 72 540 720 R
7 X
V
3 F
0 X
-0.81 (for a variety of parameters \050number of mutations, population size, proportion between) 72 712 P
0.13 (O\325s that reproduce and number of offspring, type of environment and so on\051. We car-) 72 696 P
0.03 (ried out a number of simulations in order to understand the sensitivity of this model) 72 680 P
0.98 (to different values of those parameters which we suspected would be more critical.) 72 664 P
-0.33 (Simulations were of the same basic form as those described above \050and include learn-) 72 648 P
0.53 (ing to predict\051.  Those parameter setting used in Simulation 2 will be referred to as) 72 632 P
(\324the standard\325.) 72 616 T
0.41 (In the first manipulation, we asked how the performance changes as a conse-) 108 596 P
-0.58 (quence of  modifying the value of the population size. Populations of 64, 100 \050the stan-) 72 580 P
0.24 (dard\051 and 144 O\325s were used in the three simulations. The proportion of the number) 72 564 P
0.59 (of O\325s that reproduce and the number of offspring was  kept constant \05016 O\325s repro-) 72 548 P
0.09 (duce generating 4 offspring in the first case, 20 O\325s reproduce with 5 offspring in the) 72 532 P
-0.28 (second, and 24 reproduce with 6 offspring in the last case\051. Each offspring was gener-) 72 516 P
(ated by mutating 5 connection weights.) 72 500 T
4 F
(\321 Insert Figures 11 and 12 about here \321) 192.29 476 T
3 F
0.34 (Figure 11 shows the peak performance \050i.e. the performance of the best O\325s of) 108 452 P
-0.22 (each generation\051 and Figure 12 the average performance \050i.e. the mean eating ability) 72 436 P
-0.67 (of entire generations\051. As can be seen, the intermediate population size yields the best) 72 420 P
-0.74 (results for both peak and average performance.  Performance decreases slightly in the) 72 404 P
(other two simulations.) 72 388 T
0.3 (We then asked how varying the number of offspring might affect peformance.) 108 368 P
0.14 (In the first case, we had 6 offspring for each of the 16 best O\325s that reproduce; in the) 72 352 P
-0.59 (second, 5 offspring and 20 O\325s that reproduce \050i.e. the standard\051; and in the third case,) 72 336 P
0.33 (4 offspring for each of the 25 best that reproduce. The population size was kept con-) 72 320 P
0.48 (stant around 100 O\325s \05096 O\325s in the first simulation and 100 in the other two\051. Each) 72 304 P
-0.65 (offspring was generated by mutating 5 connection weights. Figure 13 shows peak per-) 72 288 P
(formance and Figure 14 average performance.) 72 272 T
4 F
(\321 Insert  Figures 13 and 14 about here \321) 190.62 248 T
3 F
-0.21 (In this case, the simulation with the intermediate proportion between O\325s that) 108 224 P
0.15 (reproduce and number of offspring yields somewhat better results for both peak and) 72 208 P
-0.46 (mean food eaten at early stages of development; the effect is minimal in the final gen-) 72 192 P
(erations.) 72 176 T
0.88 (Figures 15 and 16 show the results of simulations with different numbers of) 108 156 P
0.42 (mutations \050Figure 15 shows peak performance and Figure 16 shows average perfor-) 72 140 P
0.4 (mance\051. The performance resulting from 2, 5, and 8 mutations \0505 is the standard\051 is) 72 124 P
-0.16 (shown. Each simulation uses a population of 100 O\325s, 20 best O\325s that reproduce, and) 72 108 P
(5 offspring .) 72 92 T
FMENDPAGE
%%EndPage: "11" 12
%%Page: "12" 12
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-12-) 295.34 36 T
72 69 540 717 R
7 X
V
3 F
0 X
-0.14 (The simulation in which 5 connections of each O are mutated produce the best) 108 709 P
-0.1 (results eat the early stages of evolution, but again, by the final generations there ap-) 72 693 P
(pear to be no large difference in effects.) 72 677 T
0 F
(Discussion) 274.01 655 T
3 F
-0.28 (We suggested at the outset that we were expecting a mutual positive influence) 108 637 P
-0.3 (of the prediction task \050learned during an O\325s life\051 on the eating task \050developed by ev-) 72 621 P
-0.3 (olution\051 because these two tasks appear to be inter-related. The requirements for one) 72 605 P
0.69 (task might overlap with those of the other.   The results appear to support this hy-) 72 589 P
(pothesis; we may  ask more specifically why this might be so.) 72 573 T
-0.65 (Let us first consider how the two tasks appear to be related. In order to produce) 108 553 P
0.05 (the correct output for each particular input \050for a given task\051, a network must trans-) 72 537 P
-0.13 (form the input pattern into a hidden pattern more similar to the desired output than) 72 521 P
0.6 (the input itself and then transform the hidden pattern into the desired output. The) 72 505 P
0.79 (hidden representation of an input pattern is also called its internal representation,) 72 489 P
1.47 (and the kind of internal representation that an input pattern has depends on the) 72 473 P
-0.41 (weights of the connections which go from the input to the hidden units. Good internal) 72 457 P
-0.46 (representations \050and therefore good set of weights from the input to the hidden units\051) 72 441 P
0.29 (are task dependent, which means that they depend, in addition to the input pattern) 72 425 P
(themselves, on the output patterns that are those desired for each input.) 72 409 T
-0.03 (In the case of our O\325s, we have two different tasks: the prediction task and the) 108 389 P
1.01 (eating task, but both tasks must be carried out by a single set of units at weights.) 72 373 P
0.38 (What we need is to find good internal representations of the input which are appro-) 72 357 P
-0.21 (priate both for the prediction task and for the eating task. If good representations for) 72 341 P
0.7 (the eating task and good representations for the prediction task are similar we can) 72 325 P
-0.71 (expect that a network that is able to perform one of the two tasks will learn the second) 72 309 P
0.9 (task faster because it starts from a point that is closer to the solution of that task.) 72 293 P
-0.31 (Therefore, when we say that the eating task and the prediction task are related what) 72 277 P
(we mean is that they share good internal representations.) 72 261 T
-0.57 (It is useful to imagine one particular example. When the food is exactly in front) 108 241 P
-0.46 (of an O, the sensory input represents the food as being at an  angle of 0 degrees. If the) 72 225 P
-0.03 (food is slightly to  the right of the network, it lies at an angle slightly greater than 0,) 72 209 P
0.13 (while if the food is a little to the left it generates an input angle  little  less than 360) 72 193 P
-0.38 (degrees. This means that the O receives  very different inputs in situations which are) 72 177 P
(very similar.) 72 161 T
-0.06 (Consider the consequences of this for the prediction and movement tasks.  Let) 108 141 P
-0.41 (us suppose the current action is a left turn \050of 90 degrees\051. For purposes of prediction,) 72 125 P
0.84 (the O must  must generate very similar outputs \050something like 95 degrees for the) 72 109 P
-0.45 (food that was slightly on the right and 85 degrees for the food that was slightly on the) 72 93 P
-0.14 (left\051. This means that a good internal representation for the prediction task for these) 72 77 P
FMENDPAGE
%%EndPage: "12" 13
%%Page: "13" 13
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-13-) 295.34 36 T
72 72 540 720 R
7 X
V
3 F
0 X
-0 (two input angles must be one that represents them in a similar way. Now let us con-) 72 712 P
-0.04 (sider what happens in the same case from the  point of view of movement and eating) 72 696 P
0.06 (strategies. When the food is in front of the O\321whether or not it is slightly to the left) 72 680 P
-0.26 (or right\321the most useful action will be go forward. Thus, it is also true for the eating) 72 664 P
-0.3 (task that two inputs which are very different must generate internal representations) 72 648 P
(which are similar.) 72 632 T
-0.72 (If we suppose that the prediction task and the eating task are positively related) 108 612 P
-0.46 (\050i.e., they share good internal representations\051 it becomes easier to see why the devel-) 72 596 P
-0.58 (opment of good eating strategies by natural selection should make the prediction task) 72 580 P
0.23 (easier to learn \050as shown in Figure 9\051. The O\325s of the final generations have good in-) 72 564 P
-0.7 (ternal representations for the eating task and, therefore begin their existence with in-) 72 548 P
-0.52 (ternal representations that facilitate learning to predict.  But how the prediction task) 72 532 P
-0.76 (that O\325s learn during their life  help in developing good eating strategies \050Figure 6 and) 72 516 P
(7\051 even if the prediction ability is not inherited?) 72 500 T
0.7 (A network with a given architecture can be represented as a point in a N-di-) 108 480 P
-0.73 (mensional space where N is the number of the connections in the network. The weight) 72 464 P
1.09 (on a connection determines the position the network occupies on the particular di-) 72 448 P
-0.36 (mension representing that connection. In this way the points in such a space can rep-) 72 432 P
2.76 (resent all possible networks, i.e. the networks with all possible combinations of) 72 416 P
-0.16 (weights on their connections. If, for example, the initial population is made up of 100) 72 400 P
0.98 (networks with a random assignment of weights on their 56 connections, these net-) 72 384 P
2.22 (works will be represented by 100 points randomly scattered in a 56-dimensional) 72 368 P
-0.27 (weight space. Furthermore, the performance of a network on a particular task can be) 72 352 P
0.1 (represented by an N+1th dimension, i.e. by an additional dimension that is added to) 72 336 P
0.02 (the N dimensions of the weight space. There will be a performance surface with N+1) 72 320 P
1.62 (dimensions that goes through all the weight space and and has higher and lower) 72 304 P
0.31 (points. Each point in the weight space \050i.e. each possible network\051 will be located on) 72 288 P
0.38 (this surface. If it is located on a high point of the surface this means that its perfor-) 72 272 P
(mance on the task is good; if it is on a low point, its performance is bad.) 72 256 T
0.54 (Selective reproduction means that only the networks that are located in high) 108 236 P
-0.18 (points of the performance surface reproduce themselves, i.e. generate copies of them-) 72 220 P
-0.24 (selves. This automatically implies that on the average the performance of the succes-) 72 204 P
(sive generation will be better than that of the previous generation.) 72 188 T
-0.62 (However, progress that can be obtained in this way, i.e., with a simple selective) 108 168 P
-0.32 (reproduction mechanism, is limited since no offspring can ever be better than its par-) 72 152 P
1.43 (ent. This limitation can be overcome by introducing a second evolutionary mecha-) 72 136 P
-0.41 (nism, random mutation. By modifying in a random way and within limits the connec-) 72 120 P
1.55 (tion weights of the copies \050offspring\051, these copies will be distributed in the space) 72 104 P
1.2 (around the point occupied by their parent. We can call this surrounding space the) 72 88 P
FMENDPAGE
%%EndPage: "13" 14
%%Page: "14" 14
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-14-) 295.34 36 T
72 72 540 720 R
7 X
V
3 F
0 X
-0.05 (\322landscape\323 of the point. Some points in the landscape will be higher and some lower) 72 712 P
-0.4 (on the performance surface with respect to the given point. This means that some off-) 72 696 P
-0.7 (spring will have a better and others a worse performance than their parent.  But since) 72 680 P
0.31 (selective reproduction ensures that the better offspring are more likely to reproduce) 72 664 P
0.06 (than the worse offspring, the random mutation mechanism allows descendants to be) 72 648 P
(better than their ancestors.) 72 632 T
0.51 (However, the two evolutionary mechanisms that we have described, selective) 108 612 P
-0.56 (reproduction and random mutation, do not exhaust the range of possible evolutionary) 72 596 P
1.61 (mechanisms. There is a further possibility that becomes clear if we consider with) 72 580 P
(some attention the nature of the landscape that surrounds a given point.) 72 564 T
0.31 (This landscape can be either good or bad. It is good if it contains many points) 108 544 P
-0.03 (that are higher than the given point, and it is bad if it contains many points that are) 72 528 P
0.43 (lower than that point. This has an effect when one introduces random mutations. If) 72 512 P
-0.02 (the landscape of a given point \050parent\051 is  good, its mutated offspring are more likely) 72 496 P
-0.6 (to be better than the parent itself, and this will have a positive effect on the evolution-) 72 480 P
0.13 (ary process. On the other hand, if a point has a bad landscape, its mutated offspring) 72 464 P
0.33 (are more likely to be worse than their parent and they will not contribute positively) 72 448 P
(to the evolutionary process because they won\325t reproduce.) 72 432 T
-0.36 (The problem is that neither the selective reproduction mechanism nor the ran-) 108 412 P
0.01 (dom mutation mechanism are by themselves capable of utilizing this fact. These two) 72 396 P
-0.78 (mechanisms \322see\323 the height of a point on the performance surface and can utilize this) 72 380 P
0.18 (information, but they are not sensitive to the landscape which surrounds that point.) 72 364 P
(This can have negative consequences for the evolutionary process.) 72 348 T
-0.42 ( For example, two points which are at the same height have the same probabil-) 108 328 P
1.66 (ity of reproducing themselves independently of their respective surrounding land-) 72 312 P
-0.13 (scapes. But in fact, it would be more useful if the point with a better landscape had a) 72 296 P
-0.55 (greater likelihood of reproduction, since its offspring would be more likely to be better) 72 280 P
-0.67 (than their parent. Or, even worse, of two points located at different heights the higher) 72 264 P
(point would reproduce even if the lower point had a a much better  landscape.) 72 248 T
0.03 (We believe that the role of learning in evolution is that of a third evolutionary) 108 228 P
0.6 (mechanism, a mechanism that allows the evolutionary process to see the landscape) 72 212 P
0.97 (surrounding each candidate for reproduction and to utilize this information. As we) 72 196 P
1.51 (know, learning causes a progressive modification of the weights of individual net-) 72 180 P
1.09 (works and this means that during life the point which represents a given network) 72 164 P
1.3 (moves progressively through weight space and on the performance surface. At the) 72 148 P
-0.73 (time of reproduction, all the positions that the network has moved through on the per-) 72 132 P
0.29 (formance surface determine if the network will reproduce or not. In this way, repro-) 72 116 P
-0.17 (duction depends on the effects that learning has had on the individual network, even) 72 100 P
-0.59 (if what is transmitted to offspring is, in a Darwinian and not Lamarckian fashion, the) 72 84 P
FMENDPAGE
%%EndPage: "14" 15
%%Page: "15" 15
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-15-) 295.34 36 T
72 72 540 720 R
7 X
V
3 F
0 X
-0.44 (position in the weight space that the point occupied at birth, before learning; or, more) 72 712 P
(exactly, positions near the original position, because of mutations.) 72 696 T
0.02 (Thus, the fundamental effect of learning on evolution is to modify the ranking) 108 676 P
-0.18 (of the individual networks on task performance, i.e. to influence what is the set of in-) 72 660 P
0.29 (dividuals that will reproduce. The direction in which learning modifies the set of re-) 72 644 P
0.94 (producing individuals is to include in this set a greater number of individuals that) 72 628 P
0.24 (have a good landscape. This should improve the outcome of the evolutionary mecha-) 72 612 P
-0.38 (nism because it makes the search in the weight space more effective, and so it can ex-) 72 596 P
0.35 (plain \050at least partially\051 the better performance that we obtain in Simulation 2 \050i.e.,) 72 580 P
-0.06 (with learning\051 as compared with Simulation 1 \050i.e., without learning\051. This point has) 72 564 P
-0.74 (also been made by Hinton & Nowlan \0501987\051 and Belew \0501989\051. However, we think that) 72 548 P
(this is not the whole story.) 72 532 T
0.01 (The task which is learned during life has a performance surface similar to the) 108 512 P
-0.33 (surface of the task on the basis of which selection operates \050this is a notion of related-) 72 496 P
-0.46 (ness between two tasks which is connected to, but not identical with, our previous no-) 72 480 P
-0.4 (tion of sharing the same good internal representations\051. We will call the first task the) 72 464 P
4 F
0.45 (learning) 72 448 P
0.45 (task) 122.4 448 P
3 F
0.45 ( and the second the) 145.5 448 P
4 F
0.45 (evolutionary) 258.35 448 P
0.45 (task) 330.74 448 P
3 F
0.45 (. In our simulations, the learning) 353.85 448 P
-0.1 (task is the task of predicting the changes in the relative position of a food element as) 72 432 P
-0.13 (a consequence of one\325s own actions.  The evolutionary task is the task of approaching) 72 416 P
(and eating food elements.) 72 400 T
0.3 (During life, learning modifies a network\325s weights and therefore causes a dis-) 108 380 P
-0.05 (placement of the point representing the network in weight space, and more precisely) 72 364 P
0.61 (a displacement towards positions that are higher on the performance surface of the) 72 348 P
1.74 (learning task; the network learns to predict. But since learning modifies the net-) 72 332 P
-0.38 (work\325s weights it will cause a displacement of the point on the performance surface of) 72 316 P
0.49 (the evolutionary task as well. We know that the learning task and the evolutionary) 72 300 P
-0.69 (task are positively related, which means that their performance surfaces have similar) 72 284 P
0.88 (shapes. A set of weights \050a point in the weight space\051 which produces  good perfor-) 72 268 P
0.14 (mance on the learning task will tend to produce  good performance on the evolution-) 72 252 P
0.25 (ary task also. This means that if the learning task and the evolutionary task are re-) 72 236 P
0.39 (lated, learning not only allows the evolutionary process to see the landscape of each) 72 220 P
-0.6 (candidate, it also allows the evolutionary process to explore that part of the landscape) 72 204 P
(which corresponds to the best performance for both tasks.) 72 188 T
-0.27 (At this point there is only a last logical step to be taken. How much an individ-) 108 168 P
0.34 (ual learns during its life depends on its landscape in the weight space. If the point\325s) 72 152 P
0.46 (landscape is a good one, i.e. it contains many points that are higher than the initial) 72 136 P
-0.13 (point, the effect of learning will be a final position that is higher than in the case of a) 72 120 P
-0.28 (bad landscape. As a consequence, at the end of life those individuals that have a good) 72 104 P
0.19 (landscape will tend to have a higher position on the learning task surface. But since) 72 88 P
FMENDPAGE
%%EndPage: "15" 16
%%Page: "16" 16
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-16-) 295.34 36 T
72 72 540 720 R
7 X
V
3 F
0 X
0.78 (we are dealing with the case of positively related tasks, if an individual has a good) 72 712 P
0.04 (landscape in the learning task it will tend to have a good landscape in the evolution-) 72 696 P
-0.29 (ary task as well. Therefore, at the end of life those O\325s that learn more and faster will) 72 680 P
-0.05 (probably tend to reproduce. This implies that the evolution process will select for O\325s) 72 664 P
0.25 (that learn a task \050prediction in our case\051 faster and better even if O\325s are strictly se-) 72 648 P
0.46 (lected based on their eating performance. This could explain why we found that the) 72 632 P
-0.75 (O\325s of Simulation 2 \050i.e., O\325s that learned to predict during their life\051 were able to learn) 72 616 P
-0.18 (to predict faster that O\325s of Simulation 1 even though they did not inherit this ability) 72 600 P
-0.43 (\050Figure 9\051. In addition, this could explain why the O\325s of Simulation 2 started improv-) 72 584 P
-0.17 (ing their eating performance in the last part of their life only after some generations,) 72 568 P
(which is when O\325s that learn to predict better have been selected \050Figure 8\051.) 72 552 T
0 F
(Conclusion) 273.35 530 T
3 F
-0.63 (We began at the outset by raising the question, Can purposeful behavior evolve) 108 512 P
-0.65 (in neural networks without an explicit teacher that trains the networks to the specific) 72 496 P
-0.19 (behavior? We raised the question because purposeful activity seems to be a hallmark) 72 480 P
0.05 (of biological systems.  We rejected the solution of explicit training \050or pre-wiring\051 be-) 72 464 P
2.01 (cause, with a few exceptions, this solution is generally not used in the biological) 72 448 P
(world.) 72 432 T
1.4 (The simple answer to the question, based on the results we have presented) 108 412 P
-0 (seems to be that yes, goal-directed behavior can indeed emerge from an evolutionary) 72 396 P
1.09 (process which exploits the interaction of random variation with a selection mecha-) 72 380 P
0.04 (nism. The selection mechanism supplies the force that makes the behavior adaptive,) 72 364 P
-0.65 (but\321and this is important\321it does not supply or teach the form of the behavior itself.) 72 348 P
-0.19 (In our case, the selection mechanism took the form of differential  reproduction in fa-) 72 332 P
0 (vor of networks with greater food resources. The selection is neither cognizant of nor) 72 316 P
-0.69 (does it operate on the behaviors by which networks accumulate food.  These behaviors) 72 300 P
-0.02 (are invisible to the selection mechanism. However, our mechanism provides an envi-) 72 284 P
0.07 (ronment in which certain behaviors \050in our case, motion toward food\051 resulted in the) 72 268 P
1.27 (flourishing of individuals who display that behavior; individuals who did not were) 72 252 P
-0.06 (culled from the population.  Insofar as these results are precisely what the lessons of) 72 236 P
(evolutionary biology lead us to expect, they should not be at all surprising.) 72 220 T
0.14 (There are some important ways in which our simulations deviate from biolog-) 108 200 P
0.52 (ical fact. The most obvious is that we introduce variation directly at the level of the) 72 184 P
-0.4 (individual \050i.e., network weights\051, whereas genetic change normally occurs at the lev-) 72 168 P
0.16 (el of the genetic code which serves as a specification language for the individual. We) 72 152 P
-0.26 (believe that this simplifying assumption does not rob our results of their validity. We) 72 136 P
-0.34 (have also chosen to rely on mutation and asexual reproduction rather than sexual re-) 72 120 P
0.51 (production and chromosomal cross-over, even though the latter is a much more  po-) 72 104 P
-0.27 (tent force for change; and this appears to be true for artificial genetic systems as well) 72 88 P
FMENDPAGE
%%EndPage: "16" 17
%%Page: "17" 17
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-17-) 295.34 36 T
72 72 540 720 R
7 X
V
3 F
0 X
0.27 (as natural \050Holland, 1975\051.  Our problem was simply that since our variation occurs) 72 712 P
0.63 (at the level of the individual, and since the connectivity pattern of neural networks) 72 696 P
-0.8 (forms a distributed pattern, it is meaningless to \324mix and match\325 parts of different net-) 72 680 P
0.15 (works. \050Two neural networks may be functionally identical but mirror images of one) 72 664 P
-0.65 (another. In this case it is obvious that the results of crossover could be disastrous, and) 72 648 P
-0.08 (no offspring might be viable\051. Until we have a better idea of what an appropriate \324ge-) 72 632 P
-0.83 (netic code\325 for a neural network would be, we cannot take advantage of cross-over. Our) 72 616 P
-0.7 (current inclination, incidentally, is that this genetic code itself ought to co-evolve with) 72 600 P
(the individual.) 72 584 T
0.81 (Our results also highlight another point which is sometimes obscured by the) 108 564 P
0.41 (ego-centrism of introspection.  For most of us, our own goals, purposes, and motives) 72 548 P
-0.39 (have a peculiarly special status. For some, an essential attribute of intelligent behav-) 72 532 P
-0.15 (ior is that it be directed toward some end, no matter how frivolous  or apparently un-) 72 516 P
1.69 (productive. Introspection tends not to be very revealing about the source of these) 72 500 P
0.56 (goals but rather to cloud them with a quasi-mystical character. We believe that the) 72 484 P
-0.77 (networks in these simulations may be truly said to have acquired goals, and that their) 72 468 P
-0.1 (behavior is intentional. Furthermore we believe that the status of these intentions is) 72 452 P
-0.18 (fundamentally no different than the intentions we perceive in ourselves. Clearly, our) 72 436 P
1.07 (own intentions are considerably more complex, subtle, indirect, and often less well) 72 420 P
0.72 (understood than those of these simple networks.  But we believe that the approach) 72 404 P
-0.58 (described here may be helpful in exploring ways in which such complex behavors may) 72 388 P
1.19 (arise through  originally random accidents which happen to have beneficial conse-) 72 372 P
(quences for reproduction.) 72 356 T
-0.7 (Finally, we show that  learning during the course of an individual\325s lifetime can) 108 336 P
-0.51 (interact in a useful an non-obvious manner with the evolution in a species of purpose-) 72 320 P
-0.46 (ful behavior. Such interaction appears to be extremely complex and powerful, at least) 72 304 P
-0.58 (in the case in which the task learned during life is positively related to the task useful) 72 288 P
-0.17 (from the evolutionary point of view. Interestingly, learning appears to function as an) 72 272 P
0.6 (additional mechanism that guides the evolutionary process. Evolution, on the other) 72 256 P
-0.32 (hand, seems to be able to push learning in the directions from which it can obtain the) 72 240 P
(best advantage.) 72 224 T
FMENDPAGE
%%EndPage: "17" 18
%%Page: "18" 18
612 792 0 FMBEGINPAGE
72 744 540 756 R
7 X
0 K
V
1 12 Q
0 X
(Nolfi, Elman, & Parisi) 72 748 T
(Learning & evolution) 430.67 748 T
72 32 540 44 R
7 X
V
0 X
(-18-) 295.34 36 T
72 72 540 720 R
7 X
V
0 F
0 X
(REFERENCES) 265.02 690 T
5 F
(Baldwin, J.M. \0501896\051. A new factor in evolution.) 72 654 T
6 F
(American Naturalist,) 310.18 654 T
5 F
( 30, 441-451.) 411.46 654 T
2.73 (Belew, R.K. \0501989\051. Evolution, learning and culture: Computational metaphors for adaptive) 72 636 P
(algorithms. CSE Technical Report CS89-156. University of California, San Diego.) 94.32 620 T
-0.26 (Cecconi, F. & Parisi, D. \0501989\051. Neural networks that learn to predict where food is and also to eat) 72 602 P
(it. Istituto di Psicologia,  National Research Councils \050CNR\051, Rome, Italy.) 94.32 586 T
(Dawkins, R. \0501987\051.) 72 568 T
6 F
(The blind watchmaker.) 172.6 568 T
5 F
( New York:  Norton.) 282.87 568 T
-0.12 (Hanson, S., & Olson, C.R. \0501990\051.) 72 550 P
6 F
-0.12 (Connectionist Modeling and Brain Function.) 239.54 550 P
5 F
-0.12 ( Cambridge, MA:) 455.29 550 P
(MIT Press.) 94.32 534 T
-0.36 (Hinton, G.E. & Nowlan S.J. \0501987\051. How learning guide evolution.) 72 516 P
6 F
-0.36 (Complex Systems) 393.87 516 P
5 F
-0.36 (, 1, 495-502.) 477.12 516 P
0.66 (Holland, J.J. \0501975\051.) 72 498 P
6 F
0.66 (Adaptation in natural and artificial systems.) 174.92 498 P
5 F
0.66 (Ann Arbor, MI: University of) 394.45 498 P
(Michigan Press.) 94.32 482 T
-0.05 (Miyata, Y. \0501988\051. The learning and planning of actions. ICS Report 8802. Institute for Cognitive) 72 464 P
(Science, University of California, San Diego.) 94.32 448 T
1.05 (Rumelhart, D.E., Hinton G.E., and  Williams, R.J. \0501986\051. Learning internal representations by) 72 430 P
3.16 (error propagation. In D.E. Rumelhart and J.L. McClelland \050Eds.\051,) 94.32 414 P
6 F
3.16 (Parallel Distributed) 439.88 414 P
(Processing. Vol.1: Foundations.) 94.32 398 T
5 F
( Cambridge, NA.: MIT Press.) 249.9 398 T
-0.27 (Rumelhart, D.E., McClelland, J.L. \0501986\051. Parallel Distributed Processing. Cambridge, MA.: MIT) 72 380 P
(Press.) 94.32 364 T
-0.51 (Waddington, C.H. \0501942\051. Canalization of development and the inheritance of acquired characters.) 72 346 P
6 F
(Nature) 94.32 330 T
5 F
(, 150, 563-565.) 127.64 330 T
FMENDPAGE
%%EndPage: "18" 19
%%Page: "19" 19
612 792 0 FMBEGINPAGE
72 72 540 720 R
7 X
0 K
V
90 450 20.47 17.93 170.47 287.19 G
0.5 H
0 Z
0 X
90 450 20.47 17.93 170.47 287.19 A
7 X
90 450 20.47 17.93 250.74 287.19 G
0 X
90 450 20.47 17.93 250.74 287.19 A
7 X
90 450 20.47 17.93 406.34 287.19 G
0 X
90 450 20.47 17.93 406.34 287.19 A
7 X
90 450 20.47 17.93 481.69 287.19 G
0 X
90 450 20.47 17.93 481.69 287.19 A
7 X
90 450 20.47 17.93 240.91 439.26 G
0 X
90 450 20.47 17.93 240.91 439.26 A
7 X
90 450 20.47 17.93 321.17 439.26 G
0 X
90 450 20.47 17.93 321.17 439.26 A
7 X
90 450 20.47 17.93 396.51 439.26 G
0 X
90 450 20.47 17.93 396.51 439.26 A
7 X
90 450 20.47 17.93 280.22 615.71 G
0 X
90 450 20.47 17.93 280.22 615.71 A
7 X
90 450 20.47 17.93 358.84 615.71 G
0 X
90 450 20.47 17.93 358.84 615.71 A
0 14 Q
(Action) 190.47 237.06 T
(Angle/Distance) 402.92 237.06 T
(Action) 307.47 660.06 T
274.89 589.26 277.75 592.05 278.73 588.17 3 L
N
243.36 467.23 277.69 591.8 2 L
2 Z
N
350.98 590.66 354.73 592.05 354.06 588.11 3 L
0 Z
N
251.55 467.23 354.59 591.85 2 L
2 Z
N
292.71 588.31 294.14 592.04 296.66 588.93 3 L
0 Z
N
313.8 467.23 294.18 591.79 2 L
2 Z
N
369.69 588.31 371.13 592.04 373.64 588.93 3 L
0 Z
N
390.78 467.23 371.17 591.79 2 L
2 Z
N
313.56 588.05 313.79 592.05 317.13 589.85 3 L
0 Z
N
376.04 467.23 313.91 591.82 2 L
2 Z
N
296.76 410.52 300.68 411.3 299.39 407.52 3 L
0 Z
N
189.31 313.73 300.51 411.12 2 L
2 Z
N
243.17 409.17 244.99 412.73 247.16 409.37 3 L
0 Z
N
249.92 313.73 245.01 412.47 2 L
2 Z
N
279.03 404.65 277.75 408.43 281.67 407.65 3 L
0 Z
N
389.14 310.86 277.95 408.25 2 L
2 Z
N
393.7 409.26 395.7 412.72 397.7 409.26 3 L
0 Z
N
395.7 323.77 395.7 412.47 2 L
2 Z
N
360.93 404.65 359.64 408.43 363.57 407.65 3 L
0 Z
N
471.04 310.86 359.85 408.25 2 L
2 Z
N
(Figure 1) 296.85 117.89 T
1 12 Q
(Architecture used in simulation 1) 234 96.75 T
FMENDPAGE
%%EndPage: "19" 20
%%Page: "20" 20
612 792 0 FMBEGINPAGE
0 0 455.76 576 R
7 X
0 K
V
0 X
0 0 -0 -0 0 455.76 576 BEGINPRINTCODE


































%%BeginDocument: /user/crl/elman/frame/papers/amoeba/fig2b.ps
%!PS-Adobe-1.0
%%Title: S QPE graphics
%%Creator: elman
%%CreationDate: Wed Aug  5 08:14:04 1992
%%Pages: (atend)
%%BoundingBox: 89.88 144.12 521.88 648.12
%%EndComments
% beginning of preamble
100 dict begin
/bd {bind def} def
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont} bd
/A {PageBegin} bd
/B {newpath} bd
/C {currentpoint stroke moveto} bd
/E {stroke} bd
/M {moveto} bd
/L {lineto} bd
/S {moveto lineto stroke} bd
/F {closepath fill} bd
/P {gsave moveto Pch-x Pch-y rmoveto Pch Show grestore} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd

% parameter setting commands
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sc {dup dup 1 lt exch 0 ge and
     {1 exch sub setgray}
     {1 sub Colors dup 3 1 roll length Rem floor get
	dup type /arraytype eq {aload pop sethsbcolor} {setgray} ifelse} ifelse} bd
/Sp {Pch exch 0 exch put SetPchSize} bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd

% other variable definitions
/InPage false def
/Clip 4 array def
/Page 4 array def
/Figure [0 0 1 1] def
/Plot [0 0 1 1] def
/ClipToPlot true def
/Cex 1 def
/Outline false def
/Pch 1 string def
/Pch-x 0 def
/Pch-y 0 def
/Text-y 0 def
/LineTypes [ % in default units
	[]		[1 2]		[4 4]		[8 4]
	[13 3]		[16 2 2 2]	[8 2 2 2]	[1 13]
	[6 5]		[12 4]
] def

% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
	     0 1 Array length 1 sub
	     {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
	uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
	lx ly translate Landscape {90 rotate 0 Height neg translate} if
	1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
	     newpath 0 0 moveto Pch false charpath flattenpath pathbbox
	     exch 3 1 roll
	     add 2 div neg /Pch-y exch def
	     add 2 div neg /Pch-x exch def
	     grestore} bd
/TextShow {CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
	/RotDiff exch def
	/Cos RotDiff cos abs def
	/Sin RotDiff sin abs def
	{
		( ) dup 0 4 -1 roll put
		dup stringwidth pop /CharWidth exch def
		Cos 0 eq {
			Text-y Sin div
		} {
			Sin 0 eq {
				CharWidth Cos div
			} {
				/H Text-y Sin div def
				/W CharWidth Cos div def
				H W lt {H} {W} ifelse
			} ifelse
		} ifelse 2 div /CharDist exch def
		CharDist 0 translate 0 0 moveto
		gsave
			RotDiff rotate
			CharWidth 2 div neg Text-y 2 div neg rmoveto
			Outline {false charpath stroke} {show} ifelse
		grestore
		CharDist 0 translate 0 0 moveto
	} forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
	  2 {CLW add 4 1 roll} repeat
	  2 {CLW sub 4 1 roll} repeat
	  initclip newpath 2 index exch 2 index exch dup 6 index exch
	  moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {/A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
	    Ux Lx sub A 0 get mul Lx add
	    Uy Ly sub A 1 get mul Ly add
	    Ux Lx sub A 2 get mul Lx add
	    Uy Ly sub A 3 get mul Ly add} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def} bd
/PageEnd {PageContext restore /InPage false def} bd
% end of preamble

% fixed controlling parameters
/Landscape false def
/Region [89.88 144.12 521.88 648.12] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/Colors [
	0
	.6
	.3
	.9
	.4
	.7
	.1
	.5
	.8
	.2
] def

% all initialization action here
I

%%EndProlog


%%Page: 1 1
A
1 St
1 Sw
1 Sc
0 Sr
42 Sp
1 Sx
.159444 .918333 .17 .863333 So
0 1 0 1 Sg
0 Sh
0 Sd
1 Sf
B
338 411 M
363 1519 L
388 803 L
413 1154 L
439 1528 L
464 1274 L
489 1157 L
515 1160 L
540 1233 L
565 1195 L
591 1262 L
616 1218 L
641 1265 L
666 1320 L
692 1279 L
717 1300 L
742 1282 L
768 1236 L
793 1268 L
818 1315 L
844 1268 L
869 1329 L
894 1277 L
919 1268 L
945 1332 L
970 1250 L
995 1265 L
1021 1288 L
1046 1323 L
1071 1317 L
1096 1408 L
1122 1487 L
1147 1350 L
1172 1470 L
1198 1481 L
1223 1537 L
1248 1540 L
1274 1677 L
1299 1587 L
1324 1595 L
1349 1560 L
1375 1627 L
1400 1575 L
1425 1759 L
1451 1569 L
1476 1578 L
1501 1587 L
1527 1575 L
1552 1595 L
1577 1584 L
1602 1584 L
E
1 Sd
(Generations) 970 112 .5 T
90 Sr
90 Sh
(Food Eaten) 42 1085 .5 T
0 Sr
0 Sh
312 357 312 330 S
565 357 565 330 S
818 357 818 330 S
1071 357 1071 330 S
1324 357 1324 330 S
1577 357 1577 330 S
312 357 1577 357 S
(0) 312 252 .5 T
(10) 565 252 .5 T
(20) 818 252 .5 T
(30) 1071 252 .5 T
(40) 1324 252 .5 T
(50) 1577 252 .5 T
90 Sr
90 Sh
287 411 260 411 S
287 703 260 703 S
287 996 260 996 S
287 1288 260 1288 S
287 1581 260 1581 S
287 411 287 1581 S
(0) 182 411 .5 T
(100) 182 703 .5 T
(200) 182 996 .5 T
(300) 182 1288 .5 T
(400) 182 1581 .5 T
0 Sr
0 Sh
0 Sd
B
287 1813 M
287 357 L
1653 357 L
1653 1813 L
287 1813 L
E
2 St
B
338 411 M
363 484 L
388 540 L
413 583 L
439 621 L
464 624 L
489 630 L
515 654 L
540 747 L
565 683 L
591 791 L
616 782 L
641 791 L
666 762 L
692 832 L
717 776 L
742 800 L
768 791 L
793 867 L
818 820 L
844 820 L
869 771 L
894 803 L
919 876 L
945 891 L
970 812 L
995 782 L
1021 812 L
1046 826 L
1071 803 L
1096 888 L
1122 896 L
1147 914 L
1172 902 L
1198 844 L
1223 917 L
1248 879 L
1274 964 L
1299 888 L
1324 943 L
1349 893 L
1375 943 L
1400 969 L
1425 972 L
1451 967 L
1476 1040 L
1501 955 L
1527 1028 L
1552 981 L
1577 1060 L
1602 1051 L
E
1 St
1 Sd
(Peak) 1501 1434 .5 T
(Average) 1501 703 .5 T
Z

%%Trailer
W
%%Pages: 1
%%EndDocument

ENDPRINTCODE
0 14 Q
(Figure 2) 278.57 106.8 T
1 12 Q
(Average and peak food eaten \050ordinate\051 as a function of) 153 86.7 T
(generation \050abscissa\051) 152 68.8 T
FMENDPAGE
%%EndPage: "20" 21
%%Page: "21" 21
612 792 0 FMBEGINPAGE
72 182.4 533.52 717 R
0.5 H
0 Z
0 X
0 K
N
117.99 717 117.99 184.3 2 L
2 Z
5 X
N
165.62 717 165.62 184.3 2 L
N
208.32 717 208.32 184.3 2 L
N
255.95 717 255.95 184.3 2 L
N
301.94 717 301.94 184.3 2 L
N
347.92 717 347.92 184.3 2 L
N
395.55 717 395.55 184.3 2 L
N
438.26 717 438.26 184.3 2 L
N
485.89 717 485.89 184.3 2 L
N
72 665.63 531.88 665.63 2 L
N
72 608.56 531.88 608.56 2 L
N
72 559.09 531.88 559.09 2 L
N
72 503.92 531.88 503.92 2 L
N
72 450.65 531.88 450.65 2 L
N
72 397.38 531.88 397.38 2 L
N
72 342.21 531.88 342.21 2 L
N
72 292.75 531.88 292.75 2 L
N
72 237.58 531.88 237.58 2 L
N
0 14 Q
0 X
(F) 86.78 686.52 T
(F) 361.07 366.9 T
(F) 132.77 420.17 T
(F) 272.37 311.73 T
(F) 224.74 635.15 T
(F) 178.76 209 T
(F) 318.36 530.52 T
(F) 411.98 635.15 T
(F) 505.6 210.9 T
(F) 502.31 570.47 T
7 F
(O) 364.35 204.98 T
372.2 323.53 374.2 326.99 376.2 323.53 3 L
0 Z
N
374.2 252.79 374.2 326.74 2 L
2 Z
N
282.41 324.99 278.94 326.99 282.41 328.99 3 L
0 Z
N
374.2 326.99 279.19 326.99 2 L
2 Z
N
276.94 475.73 278.94 479.19 280.94 475.73 3 L
0 Z
N
278.94 332.7 278.94 478.94 2 L
2 Z
N
467.64 481.19 471.11 479.19 467.64 477.19 3 L
0 Z
N
278.94 479.19 470.86 479.19 2 L
2 Z
N
469.11 587.97 471.11 591.44 473.11 587.97 3 L
0 Z
N
471.11 479.19 471.11 591.19 2 L
2 Z
N
90.25 589.44 86.78 591.44 90.25 593.44 3 L
0 Z
N
471.11 591.44 87.03 591.44 2 L
2 Z
N
120 45 471 117 R
7 X
V
0 F
0 X
(Figure 3) 270.42 107.67 T
1 12 Q
(                            Path taken by randomly selected) 120 82 T
8 F
(O) 390.68 82 T
1 F
( from G0.) 400.01 82 T
FMENDPAGE
%%EndPage: "21" 22
%%Page: "22" 22
612 792 0 FMBEGINPAGE
77.76 181 540 717.84 R
0.5 H
0 Z
0 X
0 K
N
123.82 717.84 123.82 182.92 2 L
2 Z
5 X
N
171.52 717.84 171.52 182.92 2 L
N
215.94 717.84 215.94 182.92 2 L
N
263.64 717.84 263.64 182.92 2 L
N
309.7 717.84 309.7 182.92 2 L
N
354.11 717.84 354.11 182.92 2 L
N
403.46 717.84 403.46 182.92 2 L
N
446.23 717.84 446.23 182.92 2 L
N
493.94 717.84 493.94 182.92 2 L
N
77.76 664.35 540 664.35 2 L
N
77.76 608.95 540 608.95 2 L
N
77.76 559.27 540 559.27 2 L
N
77.76 503.87 540 503.87 2 L
N
77.76 450.38 540 450.38 2 L
N
77.76 396.89 540 396.89 2 L
N
77.76 341.48 540 341.48 2 L
N
77.76 291.81 540 291.81 2 L
N
77.76 234.5 540 234.5 2 L
N
0 14 Q
0 X
(F) 94.21 687.24 T
(F) 368.92 366.29 T
(F) 146.27 425.78 T
(F) 280.09 310.89 T
(F) 230.74 633.75 T
(F) 186.33 213.72 T
(F) 330.51 519.58 T
(F) 418.27 633.75 T
(F) 510.39 203.9 T
(F) 507.1 591.72 T
7 F
(O) 92.57 421.48 T
141.74 427.54 145.2 425.54 141.74 423.54 3 L
0 Z
N
112.3 425.54 144.95 425.54 2 L
2 Z
N
153.78 207.4 151.78 203.93 149.78 207.4 3 L
0 Z
N
151.78 425.54 151.78 204.18 2 L
2 Z
N
184.51 207.84 187.97 205.84 184.51 203.84 3 L
0 Z
N
156.72 205.84 187.72 205.84 2 L
2 Z
N
185.97 305.54 187.97 309.01 189.97 305.54 3 L
0 Z
N
187.97 234.5 187.97 308.76 2 L
2 Z
N
279.92 311.01 283.38 309.01 279.92 307.01 3 L
0 Z
N
187.97 309.01 283.13 309.01 2 L
2 Z
N
281.38 380.05 283.38 383.51 285.38 380.05 3 L
0 Z
N
283.38 309.01 283.38 383.26 2 L
2 Z
N
376.97 385.51 380.43 383.51 376.97 381.51 3 L
0 Z
N
283.38 383.51 380.18 383.51 2 L
2 Z
N
378.43 529.06 380.43 532.53 382.43 529.06 3 L
0 Z
N
380.43 383.51 380.43 532.28 2 L
2 Z
N
342.77 530.53 339.31 532.53 342.77 534.53 3 L
0 Z
N
380.43 532.53 339.56 532.53 2 L
2 Z
N
329.08 639.87 331.08 643.33 333.08 639.87 3 L
0 Z
N
331.08 532.53 331.08 643.08 2 L
2 Z
N
239.14 641.33 235.68 643.33 239.14 645.33 3 L
0 Z
N
331.08 643.33 235.93 643.33 2 L
2 Z
N
190.08 81 468 162 R
7 X
V
0 F
0 X
(                           Figure 4) 190.08 120.67 T
1 12 Q
(Path taken by randomly selected) 205.64 96 T
8 F
(O) 382.96 96 T
1 F
( from G49) 392.29 96 T
FMENDPAGE
%%EndPage: "22" 23
%%Page: "23" 23
612 792 0 FMBEGINPAGE
0 14 Q
0 X
0 K
(Figure 5) 288 100.75 T
7 X
90 450 15.03 14.15 217.55 277.82 G
0.5 H
0 Z
0 X
90 450 15.03 14.15 217.55 277.82 A
7 X
90 450 15.03 14.15 263.52 277.82 G
0 X
90 450 15.03 14.15 263.52 277.82 A
7 X
90 450 15.03 14.15 374.93 277.82 G
0 X
90 450 15.03 14.15 374.93 277.82 A
7 X
90 450 15.03 14.15 420.91 277.82 G
0 X
90 450 15.03 14.15 420.91 277.82 A
(proprioceptive) 195.38 190.61 T
(         input) 189.38 173.31 T
(      sensory) 354.91 192.18 T
(         input) 354.91 174.88 T
239.42 249.2 241.42 252.66 243.42 249.2 3 L
N
241.42 213.35 241.42 252.41 2 L
2 Z
N
398.57 252.34 400.57 255.8 402.57 252.34 3 L
0 Z
N
400.57 216.5 400.57 255.55 2 L
2 Z
N
7 X
90 450 15.03 14.15 168.03 420.91 G
0 Z
0 X
90 450 15.03 14.15 168.03 420.91 A
7 X
90 450 15.03 14.15 224.62 420.91 G
0 X
90 450 15.03 14.15 224.62 420.91 A
7 X
90 450 15.03 14.15 279.44 420.91 G
0 X
90 450 15.03 14.15 279.44 420.91 A
7 X
90 450 15.03 14.15 336.03 420.91 G
0 X
90 450 15.03 14.15 336.03 420.91 A
7 X
90 450 15.03 14.15 387.31 420.91 G
0 X
90 450 15.03 14.15 387.31 420.91 A
7 X
90 450 15.03 14.15 443.9 420.91 G
0 X
90 450 15.03 14.15 443.9 420.91 A
7 X
90 450 15.03 14.15 500.49 420.91 G
0 X
90 450 15.03 14.15 500.49 420.91 A
163.2 391.78 163.6 395.76 166.85 393.42 3 L
4 X
N
207.82 296.69 163.71 395.52 2 L
2 Z
N
380.65 395.57 384.64 395.76 382.81 392.2 3 L
0 Z
N
229.04 296.69 384.45 395.61 2 L
2 Z
N
253.25 391.95 252.02 395.76 255.93 394.92 3 L
0 Z
N
361.67 296.69 252.21 395.58 2 L
2 Z
N
425.61 393.42 428.85 395.76 429.26 391.78 3 L
0 Z
N
384.66 296.69 428.77 395.52 2 L
2 Z
N
490.69 393.99 494.27 395.77 494.02 391.77 3 L
0 Z
N
428.87 296.69 494.16 395.54 2 L
2 Z
N
297.8 392.07 296.23 395.76 300.2 395.27 3 L
0 Z
N
428.87 296.69 296.44 395.6 2 L
2 Z
N
228.43 388.66 229.03 392.61 232.16 390.11 3 L
0 Z
N
264.41 301.4 229.13 392.37 2 L
2 Z
N
7 X
90 450 15.03 14.15 222.85 570.28 G
0 Z
0 X
90 450 15.03 14.15 222.85 570.28 A
7 X
90 450 15.03 14.15 268.83 570.28 G
0 X
90 450 15.03 14.15 268.83 570.28 A
207.92 539.94 211.35 541.99 211.41 537.99 3 L
N
160.07 449.21 211.24 541.76 2 L
2 Z
N
418.19 537.99 418.25 541.99 421.68 539.94 3 L
0 Z
4 X
N
469.54 449.21 418.38 541.76 2 L
2 Z
N
449.61 541.91 453.61 541.99 451.67 538.49 3 L
0 Z
N
298.01 449.21 453.41 541.85 2 L
2 Z
N
281.21 538.09 280.31 541.99 284.14 540.82 3 L
0 Z
0 X
N
366.97 449.21 280.49 541.8 2 L
2 Z
N
246.19 640.72 248.19 644.18 250.19 640.72 3 L
0 Z
N
248.19 604.88 248.19 643.93 2 L
2 Z
N
(          motor) 190.15 684.34 T
(         output) 191.3 663.9 T
7 X
90 450 15.03 14.15 401.46 575 G
0 Z
0 X
90 450 15.03 14.15 401.46 575 A
7 X
90 450 15.03 14.15 447.43 575 G
0 X
90 450 15.03 14.15 447.43 575 A
421.56 640.72 423.56 644.18 425.56 640.72 3 L
N
423.56 604.88 423.56 643.93 2 L
2 Z
N
(       predicted sensory) 336.15 684.34 T
(         input at) 360.91 661.53 T
8 F
(t) 450.34 661.53 T
(1) 455 657.53 T
1 12 Q
(Architecture used in simulation 2) 228 78.75 T
FMENDPAGE
%%EndPage: "23" 24
%%Page: "24" 24
612 792 0 FMBEGINPAGE
0 45 432 576 R
7 X
0 K
V
0 X
0 0 45 -0 -45 432 531 BEGINPRINTCODE





































%%BeginDocument: /user/crl/elman/frame/papers/amoeba/fig6b.ps
%!PS-Adobe-1.0
%%Title: S QPE graphics
%%Creator: elman
%%CreationDate: Wed Aug  5 08:14:08 1992
%%Pages: (atend)
%%BoundingBox: 89.88 144.12 521.88 648.12
%%EndComments
% beginning of preamble
100 dict begin
/bd {bind def} def
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont} bd
/A {PageBegin} bd
/B {newpath} bd
/C {currentpoint stroke moveto} bd
/E {stroke} bd
/M {moveto} bd
/L {lineto} bd
/S {moveto lineto stroke} bd
/F {closepath fill} bd
/P {gsave moveto Pch-x Pch-y rmoveto Pch Show grestore} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd

% parameter setting commands
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sc {dup dup 1 lt exch 0 ge and
     {1 exch sub setgray}
     {1 sub Colors dup 3 1 roll length Rem floor get
	dup type /arraytype eq {aload pop sethsbcolor} {setgray} ifelse} ifelse} bd
/Sp {Pch exch 0 exch put SetPchSize} bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd

% other variable definitions
/InPage false def
/Clip 4 array def
/Page 4 array def
/Figure [0 0 1 1] def
/Plot [0 0 1 1] def
/ClipToPlot true def
/Cex 1 def
/Outline false def
/Pch 1 string def
/Pch-x 0 def
/Pch-y 0 def
/Text-y 0 def
/LineTypes [ % in default units
	[]		[1 2]		[4 4]		[8 4]
	[13 3]		[16 2 2 2]	[8 2 2 2]	[1 13]
	[6 5]		[12 4]
] def

% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
	     0 1 Array length 1 sub
	     {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
	uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
	lx ly translate Landscape {90 rotate 0 Height neg translate} if
	1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
	     newpath 0 0 moveto Pch false charpath flattenpath pathbbox
	     exch 3 1 roll
	     add 2 div neg /Pch-y exch def
	     add 2 div neg /Pch-x exch def
	     grestore} bd
/TextShow {CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
	/RotDiff exch def
	/Cos RotDiff cos abs def
	/Sin RotDiff sin abs def
	{
		( ) dup 0 4 -1 roll put
		dup stringwidth pop /CharWidth exch def
		Cos 0 eq {
			Text-y Sin div
		} {
			Sin 0 eq {
				CharWidth Cos div
			} {
				/H Text-y Sin div def
				/W CharWidth Cos div def
				H W lt {H} {W} ifelse
			} ifelse
		} ifelse 2 div /CharDist exch def
		CharDist 0 translate 0 0 moveto
		gsave
			RotDiff rotate
			CharWidth 2 div neg Text-y 2 div neg rmoveto
			Outline {false charpath stroke} {show} ifelse
		grestore
		CharDist 0 translate 0 0 moveto
	} forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
	  2 {CLW add 4 1 roll} repeat
	  2 {CLW sub 4 1 roll} repeat
	  initclip newpath 2 index exch 2 index exch dup 6 index exch
	  moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {/A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
	    Ux Lx sub A 0 get mul Lx add
	    Uy Ly sub A 1 get mul Ly add
	    Ux Lx sub A 2 get mul Lx add
	    Uy Ly sub A 3 get mul Ly add} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def} bd
/PageEnd {PageContext restore /InPage false def} bd
% end of preamble

% fixed controlling parameters
/Landscape false def
/Region [89.88 144.12 521.88 648.12] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/Colors [
	0
	.6
	.3
	.9
	.4
	.7
	.1
	.5
	.8
	.2
] def

% all initialization action here
I

%%EndProlog


%%Page: 1 1
A
1 St
1 Sw
1 Sc
0 Sr
42 Sp
1 Sx
.159444 .918333 .17 .863333 So
0 1 0 1 Sg
0 Sh
0 Sd
1 Sf
B
338 411 M
363 896 L
389 919 L
415 1057 L
441 1120 L
467 1340 L
492 1402 L
518 1485 L
544 1454 L
570 1558 L
596 1485 L
622 1560 L
647 1553 L
673 1605 L
699 1565 L
725 1577 L
751 1620 L
776 1620 L
802 1636 L
828 1601 L
854 1627 L
880 1681 L
905 1615 L
931 1669 L
957 1686 L
983 1620 L
1009 1627 L
1035 1612 L
1060 1617 L
1086 1683 L
1112 1683 L
1138 1693 L
1164 1674 L
1189 1655 L
1215 1721 L
1241 1662 L
1267 1702 L
1293 1707 L
1318 1726 L
1344 1705 L
1370 1721 L
1396 1712 L
1422 1717 L
1448 1726 L
1473 1735 L
1499 1714 L
1525 1738 L
1551 1705 L
1577 1759 L
1602 1750 L
E
1 Sd
(Generations) 970 112 .5 T
90 Sr
90 Sh
(Food Eaten \(peak\)) 42 1085 .5 T
0 Sr
0 Sh
312 357 312 330 S
570 357 570 330 S
828 357 828 330 S
1086 357 1086 330 S
1344 357 1344 330 S
1602 357 1602 330 S
312 357 1602 357 S
(0) 312 252 .5 T
(10) 570 252 .5 T
(20) 828 252 .5 T
(30) 1086 252 .5 T
(40) 1344 252 .5 T
(50) 1602 252 .5 T
90 Sr
90 Sh
287 411 260 411 S
287 647 260 647 S
287 884 260 884 S
287 1120 260 1120 S
287 1357 260 1357 S
287 1594 260 1594 S
287 411 287 1594 S
(0) 182 411 .5 T
(100) 182 647 .5 T
(200) 182 884 .5 T
(300) 182 1120 .5 T
(400) 182 1357 .5 T
(500) 182 1594 .5 T
0 Sr
0 Sh
0 Sd
B
287 1813 M
287 357 L
1653 357 L
1653 1813 L
287 1813 L
E
2 St
B
338 411 M
363 728 L
389 1012 L
415 1314 L
441 1109 L
467 1014 L
492 1016 L
518 1076 L
544 1045 L
570 1099 L
596 1064 L
622 1102 L
647 1146 L
673 1113 L
699 1130 L
725 1116 L
751 1078 L
776 1104 L
802 1142 L
828 1104 L
854 1154 L
880 1111 L
905 1104 L
931 1156 L
957 1090 L
983 1102 L
1009 1120 L
1035 1149 L
1060 1144 L
1086 1217 L
1112 1281 L
1138 1170 L
1164 1267 L
1189 1277 L
1215 1322 L
1241 1324 L
1267 1435 L
1293 1362 L
1318 1369 L
1344 1340 L
1370 1395 L
1396 1352 L
1422 1501 L
1448 1348 L
1473 1355 L
1499 1362 L
1525 1352 L
1551 1369 L
1577 1359 L
1602 1359 L
E
1 St
1 Sd
(Without Prediction) 1344 1099 .5 T
(With Prediction) 1344 1560 .5 T
Z

%%Trailer
W
%%Pages: 1
%%EndDocument

ENDPRINTCODE
0 14 Q
(Figure 6) 288 74.19 T
FMENDPAGE
%%EndPage: "24" 25
%%Page: "25" 25
612 792 0 FMBEGINPAGE
0 -9 468 576 R
7 X
0 K
V
0 X
0 0 -9 -0 9 468 585 BEGINPRINTCODE








































%%BeginDocument: /user/crl/elman/frame/papers/amoeba/fig7b.ps
%!PS-Adobe-1.0
%%Title: S QPE graphics
%%Creator: elman
%%CreationDate: Wed Aug  5 08:14:12 1992
%%Pages: (atend)
%%BoundingBox: 89.88 144.12 521.88 648.12
%%EndComments
% beginning of preamble
100 dict begin
/bd {bind def} def
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont} bd
/A {PageBegin} bd
/B {newpath} bd
/C {currentpoint stroke moveto} bd
/E {stroke} bd
/M {moveto} bd
/L {lineto} bd
/S {moveto lineto stroke} bd
/F {closepath fill} bd
/P {gsave moveto Pch-x Pch-y rmoveto Pch Show grestore} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd

% parameter setting commands
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sc {dup dup 1 lt exch 0 ge and
     {1 exch sub setgray}
     {1 sub Colors dup 3 1 roll length Rem floor get
	dup type /arraytype eq {aload pop sethsbcolor} {setgray} ifelse} ifelse} bd
/Sp {Pch exch 0 exch put SetPchSize} bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd

% other variable definitions
/InPage false def
/Clip 4 array def
/Page 4 array def
/Figure [0 0 1 1] def
/Plot [0 0 1 1] def
/ClipToPlot true def
/Cex 1 def
/Outline false def
/Pch 1 string def
/Pch-x 0 def
/Pch-y 0 def
/Text-y 0 def
/LineTypes [ % in default units
	[]		[1 2]		[4 4]		[8 4]
	[13 3]		[16 2 2 2]	[8 2 2 2]	[1 13]
	[6 5]		[12 4]
] def

% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
	     0 1 Array length 1 sub
	     {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
	uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
	lx ly translate Landscape {90 rotate 0 Height neg translate} if
	1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
	     newpath 0 0 moveto Pch false charpath flattenpath pathbbox
	     exch 3 1 roll
	     add 2 div neg /Pch-y exch def
	     add 2 div neg /Pch-x exch def
	     grestore} bd
/TextShow {CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
	/RotDiff exch def
	/Cos RotDiff cos abs def
	/Sin RotDiff sin abs def
	{
		( ) dup 0 4 -1 roll put
		dup stringwidth pop /CharWidth exch def
		Cos 0 eq {
			Text-y Sin div
		} {
			Sin 0 eq {
				CharWidth Cos div
			} {
				/H Text-y Sin div def
				/W CharWidth Cos div def
				H W lt {H} {W} ifelse
			} ifelse
		} ifelse 2 div /CharDist exch def
		CharDist 0 translate 0 0 moveto
		gsave
			RotDiff rotate
			CharWidth 2 div neg Text-y 2 div neg rmoveto
			Outline {false charpath stroke} {show} ifelse
		grestore
		CharDist 0 translate 0 0 moveto
	} forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
	  2 {CLW add 4 1 roll} repeat
	  2 {CLW sub 4 1 roll} repeat
	  initclip newpath 2 index exch 2 index exch dup 6 index exch
	  moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {/A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
	    Ux Lx sub A 0 get mul Lx add
	    Uy Ly sub A 1 get mul Ly add
	    Ux Lx sub A 2 get mul Lx add
	    Uy Ly sub A 3 get mul Ly add} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def} bd
/PageEnd {PageContext restore /InPage false def} bd
% end of preamble

% fixed controlling parameters
/Landscape false def
/Region [89.88 144.12 521.88 648.12] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/Colors [
	0
	.6
	.3
	.9
	.4
	.7
	.1
	.5
	.8
	.2
] def

% all initialization action here
I

%%EndProlog


%%Page: 1 1
A
1 St
1 Sw
1 Sc
0 Sr
42 Sp
1 Sx
.159444 .918333 .17 .863333 So
0 1 0 1 Sg
0 Sh
0 Sd
1 Sf
B
338 411 M
363 482 L
388 576 L
413 668 L
439 730 L
464 837 L
489 967 L
515 1055 L
540 1209 L
565 1298 L
591 1313 L
616 1392 L
641 1410 L
666 1514 L
692 1452 L
717 1478 L
742 1446 L
768 1434 L
793 1502 L
818 1481 L
844 1531 L
869 1549 L
894 1534 L
919 1511 L
945 1576 L
970 1638 L
995 1582 L
1021 1540 L
1046 1528 L
1071 1540 L
1096 1641 L
1122 1552 L
1147 1596 L
1172 1626 L
1198 1662 L
1223 1700 L
1248 1626 L
1274 1617 L
1299 1608 L
1324 1653 L
1349 1697 L
1375 1759 L
1400 1697 L
1425 1735 L
1451 1712 L
1476 1735 L
1501 1656 L
1527 1700 L
1552 1741 L
1577 1706 L
1602 1685 L
E
1 Sd
(Generations) 970 112 .5 T
90 Sr
90 Sh
(Food Eaten \(mean\)) 42 1085 .5 T
0 Sr
0 Sh
312 357 312 330 S
565 357 565 330 S
818 357 818 330 S
1071 357 1071 330 S
1324 357 1324 330 S
1577 357 1577 330 S
312 357 1577 357 S
(0) 312 252 .5 T
(10) 565 252 .5 T
(20) 818 252 .5 T
(30) 1071 252 .5 T
(40) 1324 252 .5 T
(50) 1577 252 .5 T
90 Sr
90 Sh
287 411 260 411 S
287 707 260 707 S
287 1002 260 1002 S
287 1298 260 1298 S
287 1594 260 1594 S
287 411 287 1594 S
(0) 182 411 .5 T
(100) 182 707 .5 T
(200) 182 1002 .5 T
(300) 182 1298 .5 T
(400) 182 1594 .5 T
0 Sr
0 Sh
0 Sd
B
287 1813 M
287 357 L
1653 357 L
1653 1813 L
287 1813 L
E
2 St
B
338 411 M
363 485 L
388 541 L
413 585 L
439 624 L
464 627 L
489 633 L
515 656 L
540 751 L
565 686 L
591 795 L
616 786 L
641 795 L
666 766 L
692 837 L
717 780 L
742 804 L
768 795 L
793 872 L
818 825 L
844 825 L
869 775 L
894 807 L
919 881 L
945 896 L
970 816 L
995 786 L
1021 816 L
1046 831 L
1071 807 L
1096 893 L
1122 902 L
1147 919 L
1172 908 L
1198 848 L
1223 922 L
1248 884 L
1274 970 L
1299 893 L
1324 949 L
1349 899 L
1375 949 L
1400 976 L
1425 979 L
1451 973 L
1476 1047 L
1501 961 L
1527 1035 L
1552 987 L
1577 1067 L
1602 1058 L
E
1 St
1 Sd
(Without Prediction) 1324 707 .5 T
(With Prediction) 1324 1446 .5 T
Z

%%Trailer
W
%%Pages: 1
%%EndDocument

ENDPRINTCODE
0 14 Q
(Figure 7) 297 79.8 T
FMENDPAGE
%%EndPage: "25" 26
%%Page: "26" 26
612 792 0 FMBEGINPAGE
0 -36 468 576 R
7 X
0 K
V
0 X
0 0 -36 -0 36 468 612 BEGINPRINTCODE









































%%BeginDocument: /user/crl/elman/frame/papers/amoeba/fig8b.ps
%!PS-Adobe-1.0
%%Title: S QPE graphics
%%Creator: elman
%%CreationDate: Wed Aug  5 08:14:17 1992
%%Pages: (atend)
%%BoundingBox: 89.88 144.12 521.88 648.12
%%EndComments
% beginning of preamble
100 dict begin
/bd {bind def} def
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont} bd
/A {PageBegin} bd
/B {newpath} bd
/C {currentpoint stroke moveto} bd
/E {stroke} bd
/M {moveto} bd
/L {lineto} bd
/S {moveto lineto stroke} bd
/F {closepath fill} bd
/P {gsave moveto Pch-x Pch-y rmoveto Pch Show grestore} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd

% parameter setting commands
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sc {dup dup 1 lt exch 0 ge and
     {1 exch sub setgray}
     {1 sub Colors dup 3 1 roll length Rem floor get
	dup type /arraytype eq {aload pop sethsbcolor} {setgray} ifelse} ifelse} bd
/Sp {Pch exch 0 exch put SetPchSize} bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd

% other variable definitions
/InPage false def
/Clip 4 array def
/Page 4 array def
/Figure [0 0 1 1] def
/Plot [0 0 1 1] def
/ClipToPlot true def
/Cex 1 def
/Outline false def
/Pch 1 string def
/Pch-x 0 def
/Pch-y 0 def
/Text-y 0 def
/LineTypes [ % in default units
	[]		[1 2]		[4 4]		[8 4]
	[13 3]		[16 2 2 2]	[8 2 2 2]	[1 13]
	[6 5]		[12 4]
] def

% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
	     0 1 Array length 1 sub
	     {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
	uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
	lx ly translate Landscape {90 rotate 0 Height neg translate} if
	1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
	     newpath 0 0 moveto Pch false charpath flattenpath pathbbox
	     exch 3 1 roll
	     add 2 div neg /Pch-y exch def
	     add 2 div neg /Pch-x exch def
	     grestore} bd
/TextShow {CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
	/RotDiff exch def
	/Cos RotDiff cos abs def
	/Sin RotDiff sin abs def
	{
		( ) dup 0 4 -1 roll put
		dup stringwidth pop /CharWidth exch def
		Cos 0 eq {
			Text-y Sin div
		} {
			Sin 0 eq {
				CharWidth Cos div
			} {
				/H Text-y Sin div def
				/W CharWidth Cos div def
				H W lt {H} {W} ifelse
			} ifelse
		} ifelse 2 div /CharDist exch def
		CharDist 0 translate 0 0 moveto
		gsave
			RotDiff rotate
			CharWidth 2 div neg Text-y 2 div neg rmoveto
			Outline {false charpath stroke} {show} ifelse
		grestore
		CharDist 0 translate 0 0 moveto
	} forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
	  2 {CLW add 4 1 roll} repeat
	  2 {CLW sub 4 1 roll} repeat
	  initclip newpath 2 index exch 2 index exch dup 6 index exch
	  moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {/A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
	    Ux Lx sub A 0 get mul Lx add
	    Uy Ly sub A 1 get mul Ly add
	    Ux Lx sub A 2 get mul Lx add
	    Uy Ly sub A 3 get mul Ly add} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def} bd
/PageEnd {PageContext restore /InPage false def} bd
% end of preamble

% fixed controlling parameters
/Landscape false def
/Region [89.88 144.12 521.88 648.12] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/Colors [
	0
	.6
	.3
	.9
	.4
	.7
	.1
	.5
	.8
	.2
] def

% all initialization action here
I

%%EndProlog


%%Page: 1 1
A
1 St
1 Sw
1 Sc
0 Sr
42 Sp
1 Sx
.159444 .918333 .17 .863333 So
0 1 0 1 Sg
0 Sh
1 Sd
1 Sf
(Epoch of life) 970 112 .5 T
90 Sr
90 Sh
(Food Eaten) 42 1085 .5 T
0 Sr
0 Sh
338 357 338 330 S
654 357 654 330 S
970 357 970 330 S
1286 357 1286 330 S
1602 357 1602 330 S
338 357 1602 357 S
(0) 338 252 .5 T
(5) 654 252 .5 T
(10) 970 252 .5 T
(15) 1286 252 .5 T
(20) 1602 252 .5 T
90 Sr
90 Sh
287 411 260 411 S
287 681 260 681 S
287 950 260 950 S
287 1220 260 1220 S
287 1489 260 1489 S
287 1759 260 1759 S
287 411 287 1759 S
(0) 182 411 .5 T
(5) 182 681 .5 T
(10) 182 950 .5 T
(15) 182 1220 .5 T
(20) 182 1489 .5 T
(25) 182 1759 .5 T
0 Sr
0 Sh
0 Sd
B
287 1813 M
287 357 L
1653 357 L
1653 1813 L
287 1813 L
E
B
401 1159 M
464 1522 L
527 1576 L
591 1586 L
654 1615 L
717 1664 L
780 1679 L
844 1682 L
907 1666 L
970 1653 L
1033 1648 L
1096 1644 L
1160 1632 L
1223 1630 L
1286 1643 L
1349 1656 L
1413 1645 L
1476 1633 L
1539 1623 L
1602 1612 L
E
2 St
B
401 1219 M
464 1452 L
527 1514 L
591 1590 L
654 1622 L
717 1631 L
780 1658 L
844 1677 L
907 1636 L
970 1632 L
1033 1615 L
1096 1648 L
1160 1686 L
1223 1633 L
1286 1643 L
1349 1638 L
1413 1641 L
1476 1627 L
1539 1634 L
1602 1602 L
E
3 St
B
401 1191 M
464 1475 L
527 1497 L
591 1541 L
654 1536 L
717 1599 L
780 1622 L
844 1625 L
907 1628 L
970 1610 L
1033 1622 L
1096 1597 L
1160 1603 L
1223 1587 L
1286 1576 L
1349 1594 L
1413 1569 L
1476 1576 L
1539 1557 L
1602 1549 L
E
4 St
B
401 1036 M
464 1304 L
527 1397 L
591 1439 L
654 1523 L
717 1564 L
780 1578 L
844 1640 L
907 1649 L
970 1639 L
1033 1633 L
1096 1617 L
1160 1646 L
1223 1666 L
1286 1691 L
1349 1693 L
1413 1667 L
1476 1646 L
1539 1650 L
1602 1623 L
E
5 St
B
401 881 M
464 1201 L
527 1365 L
591 1479 L
654 1484 L
717 1541 L
780 1562 L
844 1575 L
907 1595 L
970 1602 L
1033 1609 L
1096 1605 L
1160 1613 L
1223 1646 L
1286 1633 L
1349 1594 L
1413 1591 L
1476 1622 L
1539 1603 L
1602 1556 L
E
6 St
B
401 742 M
464 995 L
527 1173 L
591 1305 L
654 1387 L
717 1417 L
780 1431 L
844 1473 L
907 1502 L
970 1530 L
1033 1547 L
1096 1562 L
1160 1564 L
1223 1561 L
1286 1569 L
1349 1573 L
1413 1555 L
1476 1552 L
1539 1541 L
1602 1535 L
E
7 St
B
401 756 M
464 863 L
527 1083 L
591 1226 L
654 1312 L
717 1366 L
780 1399 L
844 1432 L
907 1463 L
970 1447 L
1033 1500 L
1096 1468 L
1160 1431 L
1223 1443 L
1286 1406 L
1349 1409 L
1413 1414 L
1476 1423 L
1539 1425 L
1602 1453 L
E
8 St
B
401 822 M
464 940 L
527 967 L
591 1011 L
654 1112 L
717 1200 L
780 1239 L
844 1332 L
907 1335 L
970 1344 L
1033 1372 L
1096 1380 L
1160 1336 L
1223 1364 L
1286 1389 L
1349 1356 L
1413 1352 L
1476 1389 L
1539 1363 L
1602 1391 L
E
9 St
B
401 677 M
464 724 L
527 730 L
591 778 L
654 875 L
717 993 L
780 1136 L
844 1230 L
907 1335 L
970 1361 L
1033 1393 L
1096 1377 L
1160 1351 L
1223 1358 L
1286 1357 L
1349 1345 L
1413 1319 L
1476 1347 L
1539 1314 L
1602 1310 L
E
10 St
B
401 577 M
464 600 L
527 622 L
591 647 L
654 666 L
717 720 L
780 736 L
844 786 L
907 850 L
970 894 L
1033 908 L
1096 944 L
1160 932 L
1223 941 L
1286 943 L
1349 962 L
1413 973 L
1476 954 L
1539 972 L
1602 964 L
E
11 St
B
401 471 M
464 482 L
527 467 L
591 478 L
654 484 L
717 484 L
780 475 L
844 475 L
907 476 L
970 476 L
1033 481 L
1096 476 L
1160 472 L
1223 480 L
1286 470 L
1349 482 L
1413 485 L
1476 483 L
1539 477 L
1602 479 L
E
1 St
.65 Sx
1 Sd
(G0) 1729 479 .5 T
(G5) 1729 964 .5 T
(G10) 1729 1310 .5 T
(G15) 1729 1391 .5 T
(G20) 1729 1453 .5 T
(G25) 1729 1535 .5 T
(G30) 1729 1556 .5 T
(G35) 1729 1623 .5 T
(G40) 1729 1549 .5 T
(G45) 1729 1602 .5 T
(G49) 1729 1612 .5 T
Z

%%Trailer
W
%%Pages: 1
%%EndDocument

ENDPRINTCODE
0 14 Q
(Figure 8) 296.57 70.8 T
FMENDPAGE
%%EndPage: "26" 27
%%Page: "27" 27
612 792 0 FMBEGINPAGE
0 -27 476.64 576 R
7 X
0 K
V
0 X
0 0 -27 -0 27 476.64 603 BEGINPRINTCODE



































%%BeginDocument: /user/crl/elman/frame/papers/amoeba/fig9b.ps
%!PS-Adobe-1.0
%%Title: S QPE graphics
%%Creator: elman
%%CreationDate: Wed Aug  5 08:14:31 1992
%%Pages: (atend)
%%BoundingBox: 89.88 144.12 521.88 648.12
%%EndComments
% beginning of preamble
100 dict begin
/bd {bind def} def
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont} bd
/A {PageBegin} bd
/B {newpath} bd
/C {currentpoint stroke moveto} bd
/E {stroke} bd
/M {moveto} bd
/L {lineto} bd
/S {moveto lineto stroke} bd
/F {closepath fill} bd
/P {gsave moveto Pch-x Pch-y rmoveto Pch Show grestore} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd

% parameter setting commands
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sc {dup dup 1 lt exch 0 ge and
     {1 exch sub setgray}
     {1 sub Colors dup 3 1 roll length Rem floor get
	dup type /arraytype eq {aload pop sethsbcolor} {setgray} ifelse} ifelse} bd
/Sp {Pch exch 0 exch put SetPchSize} bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd

% other variable definitions
/InPage false def
/Clip 4 array def
/Page 4 array def
/Figure [0 0 1 1] def
/Plot [0 0 1 1] def
/ClipToPlot true def
/Cex 1 def
/Outline false def
/Pch 1 string def
/Pch-x 0 def
/Pch-y 0 def
/Text-y 0 def
/LineTypes [ % in default units
	[]		[1 2]		[4 4]		[8 4]
	[13 3]		[16 2 2 2]	[8 2 2 2]	[1 13]
	[6 5]		[12 4]
] def

% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
	     0 1 Array length 1 sub
	     {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
	uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
	lx ly translate Landscape {90 rotate 0 Height neg translate} if
	1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
	     newpath 0 0 moveto Pch false charpath flattenpath pathbbox
	     exch 3 1 roll
	     add 2 div neg /Pch-y exch def
	     add 2 div neg /Pch-x exch def
	     grestore} bd
/TextShow {CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
	/RotDiff exch def
	/Cos RotDiff cos abs def
	/Sin RotDiff sin abs def
	{
		( ) dup 0 4 -1 roll put
		dup stringwidth pop /CharWidth exch def
		Cos 0 eq {
			Text-y Sin div
		} {
			Sin 0 eq {
				CharWidth Cos div
			} {
				/H Text-y Sin div def
				/W CharWidth Cos div def
				H W lt {H} {W} ifelse
			} ifelse
		} ifelse 2 div /CharDist exch def
		CharDist 0 translate 0 0 moveto
		gsave
			RotDiff rotate
			CharWidth 2 div neg Text-y 2 div neg rmoveto
			Outline {false charpath stroke} {show} ifelse
		grestore
		CharDist 0 translate 0 0 moveto
	} forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
	  2 {CLW add 4 1 roll} repeat
	  2 {CLW sub 4 1 roll} repeat
	  initclip newpath 2 index exch 2 index exch dup 6 index exch
	  moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {/A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
	    Ux Lx sub A 0 get mul Lx add
	    Uy Ly sub A 1 get mul Ly add
	    Ux Lx sub A 2 get mul Lx add
	    Uy Ly sub A 3 get mul Ly add} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def} bd
/PageEnd {PageContext restore /InPage false def} bd
% end of preamble

% fixed controlling parameters
/Landscape false def
/Region [89.88 144.12 521.88 648.12] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/Colors [
	0
	.6
	.3
	.9
	.4
	.7
	.1
	.5
	.8
	.2
] def

% all initialization action here
I

%%EndProlog


%%Page: 1 1
A
1 St
1 Sw
1 Sc
0 Sr
42 Sp
1 Sx
.159444 .918333 .17 .863333 So
0 1 0 1 Sg
0 Sh
0 Sd
1 Sf
B
338 1759 M
363 1506 L
389 1408 L
415 1332 L
441 1267 L
467 1213 L
492 1169 L
518 1133 L
544 1102 L
570 1073 L
596 1047 L
622 1021 L
647 997 L
673 973 L
699 950 L
725 928 L
751 906 L
776 885 L
802 864 L
828 846 L
854 829 L
880 812 L
905 794 L
931 777 L
957 760 L
983 743 L
1009 726 L
1035 709 L
1060 692 L
1086 675 L
1112 659 L
1138 643 L
1164 627 L
1189 612 L
1215 596 L
1241 582 L
1267 567 L
1293 553 L
1318 539 L
1344 525 L
1370 512 L
1396 499 L
1422 486 L
1448 474 L
1473 462 L
1499 451 L
1525 440 L
1551 430 L
1577 420 L
1602 411 L
E
1 Sd
(Epoch) 970 112 .5 T
90 Sr
90 Sh
(Global error) 42 1085 .5 T
0 Sr
0 Sh
312 357 312 330 S
570 357 570 330 S
828 357 828 330 S
1086 357 1086 330 S
1344 357 1344 330 S
1602 357 1602 330 S
312 357 1602 357 S
(0) 312 252 .5 T
(10) 570 252 .5 T
(20) 828 252 .5 T
(30) 1086 252 .5 T
(40) 1344 252 .5 T
(50) 1602 252 .5 T
90 Sr
90 Sh
287 489 260 489 S
287 757 260 757 S
287 1024 260 1024 S
287 1292 260 1292 S
287 1559 260 1559 S
287 489 287 1559 S
(8) 182 489 .5 T
(10) 182 757 .5 T
(12) 182 1024 .5 T
(14) 182 1292 .5 T
(16) 182 1559 .5 T
0 Sr
0 Sh
0 Sd
B
287 1813 M
287 357 L
1653 357 L
1653 1813 L
287 1813 L
E
2 St
B
338 1592 M
363 1516 L
389 1436 L
415 1357 L
441 1285 L
467 1227 L
492 1183 L
518 1152 L
544 1129 L
570 1113 L
596 1098 L
622 1085 L
647 1072 L
673 1058 L
699 1043 L
725 1026 L
751 1009 L
776 992 L
802 974 L
828 956 L
854 937 L
880 919 L
905 901 L
931 884 L
957 866 L
983 849 L
1009 833 L
1035 817 L
1060 801 L
1086 785 L
1112 770 L
1138 755 L
1164 740 L
1189 725 L
1215 710 L
1241 696 L
1267 682 L
1293 668 L
1318 654 L
1344 640 L
1370 627 L
1396 614 L
1422 601 L
1448 588 L
1473 576 L
1499 564 L
1525 552 L
1551 541 L
1577 530 L
1602 520 L
E
1 St
1 Sd
(G0) 1525 623 .5 T
(G49) 1215 489 .5 T
Z

%%Trailer
W
%%Pages: 1
%%EndDocument

ENDPRINTCODE
0 14 Q
(Figure 9) 305.34 65.19 T
FMENDPAGE
%%EndPage: "27" 28
%%Page: "28" 28
612 792 0 FMBEGINPAGE
0 -36 450 576 R
7 X
0 K
V
0 X
0 0 -36 -0 36 450 612 BEGINPRINTCODE










































%%BeginDocument: /user/crl/elman/frame/papers/amoeba/fig10b.ps
%!PS-Adobe-1.0
%%Title: S QPE graphics
%%Creator: elman
%%CreationDate: Wed Aug  5 08:14:36 1992
%%Pages: (atend)
%%BoundingBox: 89.88 144.12 521.88 648.12
%%EndComments
% beginning of preamble
100 dict begin
/bd {bind def} def
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont} bd
/A {PageBegin} bd
/B {newpath} bd
/C {currentpoint stroke moveto} bd
/E {stroke} bd
/M {moveto} bd
/L {lineto} bd
/S {moveto lineto stroke} bd
/F {closepath fill} bd
/P {gsave moveto Pch-x Pch-y rmoveto Pch Show grestore} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd

% parameter setting commands
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sc {dup dup 1 lt exch 0 ge and
     {1 exch sub setgray}
     {1 sub Colors dup 3 1 roll length Rem floor get
	dup type /arraytype eq {aload pop sethsbcolor} {setgray} ifelse} ifelse} bd
/Sp {Pch exch 0 exch put SetPchSize} bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd

% other variable definitions
/InPage false def
/Clip 4 array def
/Page 4 array def
/Figure [0 0 1 1] def
/Plot [0 0 1 1] def
/ClipToPlot true def
/Cex 1 def
/Outline false def
/Pch 1 string def
/Pch-x 0 def
/Pch-y 0 def
/Text-y 0 def
/LineTypes [ % in default units
	[]		[1 2]		[4 4]		[8 4]
	[13 3]		[16 2 2 2]	[8 2 2 2]	[1 13]
	[6 5]		[12 4]
] def

% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
	     0 1 Array length 1 sub
	     {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
	uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
	lx ly translate Landscape {90 rotate 0 Height neg translate} if
	1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
	     newpath 0 0 moveto Pch false charpath flattenpath pathbbox
	     exch 3 1 roll
	     add 2 div neg /Pch-y exch def
	     add 2 div neg /Pch-x exch def
	     grestore} bd
/TextShow {CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
	/RotDiff exch def
	/Cos RotDiff cos abs def
	/Sin RotDiff sin abs def
	{
		( ) dup 0 4 -1 roll put
		dup stringwidth pop /CharWidth exch def
		Cos 0 eq {
			Text-y Sin div
		} {
			Sin 0 eq {
				CharWidth Cos div
			} {
				/H Text-y Sin div def
				/W CharWidth Cos div def
				H W lt {H} {W} ifelse
			} ifelse
		} ifelse 2 div /CharDist exch def
		CharDist 0 translate 0 0 moveto
		gsave
			RotDiff rotate
			CharWidth 2 div neg Text-y 2 div neg rmoveto
			Outline {false charpath stroke} {show} ifelse
		grestore
		CharDist 0 translate 0 0 moveto
	} forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
	  2 {CLW add 4 1 roll} repeat
	  2 {CLW sub 4 1 roll} repeat
	  initclip newpath 2 index exch 2 index exch dup 6 index exch
	  moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {/A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
	    Ux Lx sub A 0 get mul Lx add
	    Uy Ly sub A 1 get mul Ly add
	    Ux Lx sub A 2 get mul Lx add
	    Uy Ly sub A 3 get mul Ly add} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def} bd
/PageEnd {PageContext restore /InPage false def} bd
% end of preamble

% fixed controlling parameters
/Landscape false def
/Region [89.88 144.12 521.88 648.12] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/Colors [
	0
	.6
	.3
	.9
	.4
	.7
	.1
	.5
	.8
	.2
] def

% all initialization action here
I

%%EndProlog


%%Page: 1 1
A
1 St
1 Sw
1 Sc
0 Sr
42 Sp
1 Sx
.159444 .918333 .17 .863333 So
0 1 0 1 Sg
0 Sh
0 Sd
1 Sf
B
363 1721 M
388 1579 L
413 1525 L
439 1482 L
464 1446 L
489 1416 L
515 1391 L
540 1371 L
565 1353 L
591 1337 L
616 1322 L
641 1308 L
666 1294 L
692 1281 L
717 1268 L
742 1256 L
768 1243 L
793 1232 L
818 1220 L
844 1210 L
869 1200 L
894 1191 L
919 1181 L
945 1171 L
970 1162 L
995 1152 L
1021 1143 L
1046 1133 L
1071 1124 L
1096 1114 L
1122 1105 L
1147 1096 L
1172 1087 L
1198 1079 L
1223 1070 L
1248 1062 L
1274 1054 L
1299 1046 L
1324 1038 L
1349 1030 L
1375 1023 L
1400 1016 L
1425 1008 L
1451 1002 L
1476 995 L
1501 989 L
1527 983 L
1552 977 L
1577 971 L
1602 966 L
E
1 Sd
(Epoch) 970 112 .5 T
90 Sr
90 Sh
(Global error) 42 1085 .5 T
0 Sr
0 Sh
338 357 338 330 S
591 357 591 330 S
844 357 844 330 S
1096 357 1096 330 S
1349 357 1349 330 S
1602 357 1602 330 S
338 357 1602 357 S
(0) 338 252 .5 T
(10) 591 252 .5 T
(20) 844 252 .5 T
(30) 1096 252 .5 T
(40) 1349 252 .5 T
(50) 1602 252 .5 T
90 Sr
90 Sh
287 411 260 411 S
287 785 260 785 S
287 1160 260 1160 S
287 1534 260 1534 S
287 411 287 1534 S
(0) 182 411 .5 T
(5) 182 785 .5 T
(10) 182 1160 .5 T
(15) 182 1534 .5 T
0 Sr
0 Sh
0 Sd
B
287 1813 M
287 357 L
1653 357 L
1653 1813 L
287 1813 L
E
2 St
B
363 1628 M
388 1585 L
413 1540 L
439 1496 L
464 1456 L
489 1423 L
515 1398 L
540 1381 L
565 1369 L
591 1359 L
616 1351 L
641 1344 L
666 1336 L
692 1328 L
717 1320 L
742 1311 L
768 1301 L
793 1292 L
818 1281 L
844 1271 L
869 1261 L
894 1251 L
919 1241 L
945 1231 L
970 1221 L
995 1212 L
1021 1203 L
1046 1193 L
1071 1185 L
1096 1176 L
1122 1167 L
1147 1159 L
1172 1150 L
1198 1142 L
1223 1134 L
1248 1126 L
1274 1118 L
1299 1110 L
1324 1102 L
1349 1095 L
1375 1087 L
1400 1080 L
1425 1073 L
1451 1066 L
1476 1059 L
1501 1052 L
1527 1046 L
1552 1039 L
1577 1033 L
1602 1027 L
E
3 St
B
363 1660 M
388 1492 L
413 1415 L
439 1351 L
464 1298 L
489 1255 L
515 1219 L
540 1189 L
565 1164 L
591 1143 L
616 1125 L
641 1110 L
666 1096 L
692 1084 L
717 1074 L
742 1064 L
768 1056 L
793 1048 L
818 1041 L
844 1035 L
869 1029 L
894 1023 L
919 1018 L
945 1013 L
970 1008 L
995 1003 L
1021 999 L
1046 995 L
1071 991 L
1096 987 L
1122 983 L
1147 980 L
1172 976 L
1198 973 L
1223 970 L
1248 967 L
1274 964 L
1299 961 L
1324 958 L
1349 955 L
1375 952 L
1400 949 L
1425 947 L
1451 944 L
1476 941 L
1501 939 L
1527 936 L
1552 934 L
1577 932 L
1602 929 L
E
1 St
1 Sd
(G0) 1527 1160 .5 T
(G49 \(1\)) 1021 1085 .5 T
(G49 \(2\)) 1096 860 .5 T
Z

%%Trailer
W
%%Pages: 1
%%EndDocument

ENDPRINTCODE
0 14 Q
(Figure 10) 297 66.06 T
FMENDPAGE
%%EndPage: "28" 29
%%Page: "29" 29
612 792 0 FMBEGINPAGE
0 -36 459 576.36 R
7 X
0 K
V
0 X
0 0 -36 -0 36 459 612.36 BEGINPRINTCODE










































%%BeginDocument: /user/crl/elman/frame/papers/amoeba/fig11b.ps
%!PS-Adobe-1.0
%%Title: S QPE graphics
%%Creator: elman
%%CreationDate: Wed Aug  5 08:14:41 1992
%%Pages: (atend)
%%BoundingBox: 89.88 144.12 521.88 648.12
%%EndComments
% beginning of preamble
100 dict begin
/bd {bind def} def
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont} bd
/A {PageBegin} bd
/B {newpath} bd
/C {currentpoint stroke moveto} bd
/E {stroke} bd
/M {moveto} bd
/L {lineto} bd
/S {moveto lineto stroke} bd
/F {closepath fill} bd
/P {gsave moveto Pch-x Pch-y rmoveto Pch Show grestore} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd

% parameter setting commands
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sc {dup dup 1 lt exch 0 ge and
     {1 exch sub setgray}
     {1 sub Colors dup 3 1 roll length Rem floor get
	dup type /arraytype eq {aload pop sethsbcolor} {setgray} ifelse} ifelse} bd
/Sp {Pch exch 0 exch put SetPchSize} bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd

% other variable definitions
/InPage false def
/Clip 4 array def
/Page 4 array def
/Figure [0 0 1 1] def
/Plot [0 0 1 1] def
/ClipToPlot true def
/Cex 1 def
/Outline false def
/Pch 1 string def
/Pch-x 0 def
/Pch-y 0 def
/Text-y 0 def
/LineTypes [ % in default units
	[]		[1 2]		[4 4]		[8 4]
	[13 3]		[16 2 2 2]	[8 2 2 2]	[1 13]
	[6 5]		[12 4]
] def

% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
	     0 1 Array length 1 sub
	     {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
	uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
	lx ly translate Landscape {90 rotate 0 Height neg translate} if
	1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
	     newpath 0 0 moveto Pch false charpath flattenpath pathbbox
	     exch 3 1 roll
	     add 2 div neg /Pch-y exch def
	     add 2 div neg /Pch-x exch def
	     grestore} bd
/TextShow {CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
	/RotDiff exch def
	/Cos RotDiff cos abs def
	/Sin RotDiff sin abs def
	{
		( ) dup 0 4 -1 roll put
		dup stringwidth pop /CharWidth exch def
		Cos 0 eq {
			Text-y Sin div
		} {
			Sin 0 eq {
				CharWidth Cos div
			} {
				/H Text-y Sin div def
				/W CharWidth Cos div def
				H W lt {H} {W} ifelse
			} ifelse
		} ifelse 2 div /CharDist exch def
		CharDist 0 translate 0 0 moveto
		gsave
			RotDiff rotate
			CharWidth 2 div neg Text-y 2 div neg rmoveto
			Outline {false charpath stroke} {show} ifelse
		grestore
		CharDist 0 translate 0 0 moveto
	} forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
	  2 {CLW add 4 1 roll} repeat
	  2 {CLW sub 4 1 roll} repeat
	  initclip newpath 2 index exch 2 index exch dup 6 index exch
	  moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {/A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
	    Ux Lx sub A 0 get mul Lx add
	    Uy Ly sub A 1 get mul Ly add
	    Ux Lx sub A 2 get mul Lx add
	    Uy Ly sub A 3 get mul Ly add} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def} bd
/PageEnd {PageContext restore /InPage false def} bd
% end of preamble

% fixed controlling parameters
/Landscape false def
/Region [89.88 144.12 521.88 648.12] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/Colors [
	0
	.6
	.3
	.9
	.4
	.7
	.1
	.5
	.8
	.2
] def

% all initialization action here
I

%%EndProlog


%%Page: 1 1
A
1 St
1 Sw
1 Sc
0 Sr
42 Sp
1 Sx
.159444 .918333 .17 .863333 So
0 1 0 1 Sg
0 Sh
0 Sd
1 Sf
B
363 779 M
388 943 L
413 979 L
439 932 L
464 1078 L
489 1098 L
515 1114 L
540 1193 L
565 1200 L
591 1152 L
616 1307 L
641 1377 L
666 1384 L
692 1429 L
717 1400 L
742 1460 L
768 1431 L
793 1451 L
818 1420 L
844 1492 L
869 1456 L
894 1478 L
919 1438 L
945 1456 L
970 1528 L
995 1501 L
1021 1462 L
1046 1485 L
1071 1496 L
1096 1487 L
1122 1487 L
1147 1548 L
1172 1552 L
1198 1584 L
1223 1584 L
1248 1557 L
1274 1561 L
1299 1559 L
1324 1568 L
1349 1566 L
1375 1566 L
1400 1595 L
1425 1582 L
1451 1620 L
1476 1649 L
1501 1561 L
1527 1588 L
1552 1649 L
1577 1588 L
1602 1604 L
E
1 Sd
(Generations) 970 112 .5 T
90 Sr
90 Sh
(Food Eaten \(peak\)) 42 1085 .5 T
0 Sr
0 Sh
338 357 338 330 S
591 357 591 330 S
844 357 844 330 S
1096 357 1096 330 S
1349 357 1349 330 S
1602 357 1602 330 S
338 357 1602 357 S
(0) 338 252 .5 T
(10) 591 252 .5 T
(20) 844 252 .5 T
(30) 1096 252 .5 T
(40) 1349 252 .5 T
(50) 1602 252 .5 T
90 Sr
90 Sh
287 411 260 411 S
287 636 260 636 S
287 860 260 860 S
287 1085 260 1085 S
287 1310 260 1310 S
287 1534 260 1534 S
287 1759 260 1759 S
287 411 287 1759 S
(0) 182 411 .5 T
(100) 182 636 .5 T
(200) 182 860 .5 T
(300) 182 1085 .5 T
(400) 182 1310 .5 T
(500) 182 1534 .5 T
(600) 182 1759 .5 T
0 Sr
0 Sh
0 Sd
B
287 1813 M
287 357 L
1653 357 L
1653 1813 L
287 1813 L
E
2 St
B
363 838 M
388 872 L
413 894 L
439 1024 L
464 1085 L
489 1294 L
515 1352 L
540 1431 L
565 1402 L
591 1501 L
616 1431 L
641 1503 L
666 1496 L
692 1546 L
717 1507 L
742 1519 L
768 1559 L
793 1559 L
818 1575 L
844 1541 L
869 1566 L
894 1618 L
919 1555 L
945 1606 L
970 1622 L
995 1559 L
1021 1566 L
1046 1552 L
1071 1557 L
1096 1620 L
1122 1620 L
1147 1629 L
1172 1611 L
1198 1593 L
1223 1656 L
1248 1600 L
1274 1638 L
1299 1642 L
1324 1660 L
1349 1640 L
1375 1656 L
1400 1647 L
1425 1651 L
1451 1660 L
1476 1669 L
1501 1649 L
1527 1671 L
1552 1640 L
1577 1692 L
1602 1683 L
E
3 St
B
363 820 M
388 1045 L
413 959 L
439 1045 L
464 1033 L
489 1101 L
515 1148 L
540 1177 L
565 1179 L
591 1184 L
616 1204 L
641 1242 L
666 1258 L
692 1276 L
717 1280 L
742 1339 L
768 1301 L
793 1352 L
818 1346 L
844 1341 L
869 1350 L
894 1361 L
919 1364 L
945 1364 L
970 1375 L
995 1377 L
1021 1388 L
1046 1386 L
1071 1370 L
1096 1397 L
1122 1393 L
1147 1393 L
1172 1400 L
1198 1400 L
1223 1404 L
1248 1415 L
1274 1424 L
1299 1427 L
1324 1400 L
1349 1480 L
1375 1487 L
1400 1530 L
1425 1534 L
1451 1530 L
1476 1519 L
1501 1501 L
1527 1512 L
1552 1555 L
1577 1548 L
1602 1534 L
E
1 St
1 Sd
(64) 1729 1579 .5 T
(100) 1729 1669 .5 T
(144) 1729 1489 .5 T
Z

%%Trailer
W
%%Pages: 1
%%EndDocument

ENDPRINTCODE
9 14 Q
(Figure 11) 297 66.06 T
FMENDPAGE
%%EndPage: "29" 30
%%Page: "30" 30
612 792 0 FMBEGINPAGE
0 -36 468 576 R
7 X
0 K
V
0 X
0 0 -36 -0 36 468 612 BEGINPRINTCODE










































%%BeginDocument: /user/crl/elman/frame/papers/amoeba/fig12b.ps
%!PS-Adobe-1.0
%%Title: S QPE graphics
%%Creator: elman
%%CreationDate: Wed Aug  5 08:14:46 1992
%%Pages: (atend)
%%BoundingBox: 89.88 144.12 521.88 648.12
%%EndComments
% beginning of preamble
100 dict begin
/bd {bind def} def
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont} bd
/A {PageBegin} bd
/B {newpath} bd
/C {currentpoint stroke moveto} bd
/E {stroke} bd
/M {moveto} bd
/L {lineto} bd
/S {moveto lineto stroke} bd
/F {closepath fill} bd
/P {gsave moveto Pch-x Pch-y rmoveto Pch Show grestore} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd

% parameter setting commands
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sc {dup dup 1 lt exch 0 ge and
     {1 exch sub setgray}
     {1 sub Colors dup 3 1 roll length Rem floor get
	dup type /arraytype eq {aload pop sethsbcolor} {setgray} ifelse} ifelse} bd
/Sp {Pch exch 0 exch put SetPchSize} bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd

% other variable definitions
/InPage false def
/Clip 4 array def
/Page 4 array def
/Figure [0 0 1 1] def
/Plot [0 0 1 1] def
/ClipToPlot true def
/Cex 1 def
/Outline false def
/Pch 1 string def
/Pch-x 0 def
/Pch-y 0 def
/Text-y 0 def
/LineTypes [ % in default units
	[]		[1 2]		[4 4]		[8 4]
	[13 3]		[16 2 2 2]	[8 2 2 2]	[1 13]
	[6 5]		[12 4]
] def

% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
	     0 1 Array length 1 sub
	     {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
	uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
	lx ly translate Landscape {90 rotate 0 Height neg translate} if
	1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
	     newpath 0 0 moveto Pch false charpath flattenpath pathbbox
	     exch 3 1 roll
	     add 2 div neg /Pch-y exch def
	     add 2 div neg /Pch-x exch def
	     grestore} bd
/TextShow {CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
	/RotDiff exch def
	/Cos RotDiff cos abs def
	/Sin RotDiff sin abs def
	{
		( ) dup 0 4 -1 roll put
		dup stringwidth pop /CharWidth exch def
		Cos 0 eq {
			Text-y Sin div
		} {
			Sin 0 eq {
				CharWidth Cos div
			} {
				/H Text-y Sin div def
				/W CharWidth Cos div def
				H W lt {H} {W} ifelse
			} ifelse
		} ifelse 2 div /CharDist exch def
		CharDist 0 translate 0 0 moveto
		gsave
			RotDiff rotate
			CharWidth 2 div neg Text-y 2 div neg rmoveto
			Outline {false charpath stroke} {show} ifelse
		grestore
		CharDist 0 translate 0 0 moveto
	} forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
	  2 {CLW add 4 1 roll} repeat
	  2 {CLW sub 4 1 roll} repeat
	  initclip newpath 2 index exch 2 index exch dup 6 index exch
	  moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {/A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
	    Ux Lx sub A 0 get mul Lx add
	    Uy Ly sub A 1 get mul Ly add
	    Ux Lx sub A 2 get mul Lx add
	    Uy Ly sub A 3 get mul Ly add} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def} bd
/PageEnd {PageContext restore /InPage false def} bd
% end of preamble

% fixed controlling parameters
/Landscape false def
/Region [89.88 144.12 521.88 648.12] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/Colors [
	0
	.6
	.3
	.9
	.4
	.7
	.1
	.5
	.8
	.2
] def

% all initialization action here
I

%%EndProlog


%%Page: 1 1
A
1 St
1 Sw
1 Sc
0 Sr
42 Sp
1 Sx
.159444 .918333 .17 .863333 So
0 1 0 1 Sg
0 Sh
0 Sd
1 Sf
B
363 465 M
388 532 L
413 618 L
439 624 L
464 649 L
489 725 L
515 766 L
540 806 L
565 851 L
591 831 L
616 818 L
641 914 L
666 993 L
692 1049 L
717 1029 L
742 1027 L
768 1069 L
793 1119 L
818 1132 L
844 1137 L
869 1134 L
894 1164 L
919 1116 L
945 1222 L
970 1222 L
995 1150 L
1021 1094 L
1046 1193 L
1071 1143 L
1096 1137 L
1122 1182 L
1147 1179 L
1172 1177 L
1198 1256 L
1223 1334 L
1248 1220 L
1274 1211 L
1299 1175 L
1324 1285 L
1349 1263 L
1375 1337 L
1400 1343 L
1425 1348 L
1451 1312 L
1476 1298 L
1501 1260 L
1527 1289 L
1552 1350 L
1577 1271 L
1602 1294 L
E
1 Sd
(Generations) 970 112 .5 T
90 Sr
90 Sh
(Food Eaten \(mean\)) 42 1085 .5 T
0 Sr
0 Sh
338 357 338 330 S
591 357 591 330 S
844 357 844 330 S
1096 357 1096 330 S
1349 357 1349 330 S
1602 357 1602 330 S
338 357 1602 357 S
(0) 338 252 .5 T
(10) 591 252 .5 T
(20) 844 252 .5 T
(30) 1096 252 .5 T
(40) 1349 252 .5 T
(50) 1602 252 .5 T
90 Sr
90 Sh
287 411 260 411 S
287 636 260 636 S
287 860 260 860 S
287 1085 260 1085 S
287 1310 260 1310 S
287 1534 260 1534 S
287 1759 260 1759 S
287 411 287 1759 S
(0) 182 411 .5 T
(100) 182 636 .5 T
(200) 182 860 .5 T
(300) 182 1085 .5 T
(400) 182 1310 .5 T
(500) 182 1534 .5 T
(600) 182 1759 .5 T
0 Sr
0 Sh
0 Sd
B
287 1813 M
287 357 L
1653 357 L
1653 1813 L
287 1813 L
E
2 St
B
363 465 M
388 537 L
413 606 L
439 654 L
464 734 L
489 833 L
515 901 L
540 1018 L
565 1085 L
591 1096 L
616 1157 L
641 1170 L
666 1249 L
692 1202 L
717 1222 L
742 1197 L
768 1188 L
793 1240 L
818 1224 L
844 1263 L
869 1276 L
894 1265 L
919 1247 L
945 1296 L
970 1343 L
995 1301 L
1021 1269 L
1046 1260 L
1071 1269 L
1096 1346 L
1122 1278 L
1147 1312 L
1172 1334 L
1198 1361 L
1223 1391 L
1248 1334 L
1274 1328 L
1299 1321 L
1324 1355 L
1349 1388 L
1375 1436 L
1400 1388 L
1425 1418 L
1451 1400 L
1476 1418 L
1501 1357 L
1527 1391 L
1552 1422 L
1577 1395 L
1602 1379 L
E
3 St
B
363 472 M
388 546 L
413 593 L
439 647 L
464 696 L
489 770 L
515 809 L
540 829 L
565 910 L
591 899 L
616 892 L
641 988 L
666 1020 L
692 1058 L
717 1089 L
742 1110 L
768 1110 L
793 1177 L
818 1195 L
844 1191 L
869 1175 L
894 1204 L
919 1197 L
945 1202 L
970 1209 L
995 1197 L
1021 1220 L
1046 1206 L
1071 1229 L
1096 1247 L
1122 1224 L
1147 1238 L
1172 1222 L
1198 1251 L
1223 1188 L
1248 1236 L
1274 1254 L
1299 1247 L
1324 1240 L
1349 1249 L
1375 1251 L
1400 1269 L
1425 1269 L
1451 1292 L
1476 1298 L
1501 1265 L
1527 1292 L
1552 1314 L
1577 1303 L
1602 1305 L
E
1 St
1 Sd
(144) 1729 1197 .5 T
(64) 1729 1130 .5 T
(100) 1729 1512 .5 T
Z

%%Trailer
W
%%Pages: 1
%%EndDocument

ENDPRINTCODE
9 14 Q
(Figure 12) 297 66.06 T
FMENDPAGE
%%EndPage: "30" 31
%%Page: "31" 31
612 792 0 FMBEGINPAGE
0 -27 468 576.36 R
7 X
0 K
V
0 X
0 0 -27 -0 27 468 603.36 BEGINPRINTCODE










































%%BeginDocument: /user/crl/elman/frame/papers/amoeba/fig13b.ps
%!PS-Adobe-1.0
%%Title: S QPE graphics
%%Creator: elman
%%CreationDate: Wed Aug  5 08:14:52 1992
%%Pages: (atend)
%%BoundingBox: 89.88 144.12 521.88 648.12
%%EndComments
% beginning of preamble
100 dict begin
/bd {bind def} def
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont} bd
/A {PageBegin} bd
/B {newpath} bd
/C {currentpoint stroke moveto} bd
/E {stroke} bd
/M {moveto} bd
/L {lineto} bd
/S {moveto lineto stroke} bd
/F {closepath fill} bd
/P {gsave moveto Pch-x Pch-y rmoveto Pch Show grestore} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd

% parameter setting commands
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sc {dup dup 1 lt exch 0 ge and
     {1 exch sub setgray}
     {1 sub Colors dup 3 1 roll length Rem floor get
	dup type /arraytype eq {aload pop sethsbcolor} {setgray} ifelse} ifelse} bd
/Sp {Pch exch 0 exch put SetPchSize} bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd

% other variable definitions
/InPage false def
/Clip 4 array def
/Page 4 array def
/Figure [0 0 1 1] def
/Plot [0 0 1 1] def
/ClipToPlot true def
/Cex 1 def
/Outline false def
/Pch 1 string def
/Pch-x 0 def
/Pch-y 0 def
/Text-y 0 def
/LineTypes [ % in default units
	[]		[1 2]		[4 4]		[8 4]
	[13 3]		[16 2 2 2]	[8 2 2 2]	[1 13]
	[6 5]		[12 4]
] def

% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
	     0 1 Array length 1 sub
	     {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
	uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
	lx ly translate Landscape {90 rotate 0 Height neg translate} if
	1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
	     newpath 0 0 moveto Pch false charpath flattenpath pathbbox
	     exch 3 1 roll
	     add 2 div neg /Pch-y exch def
	     add 2 div neg /Pch-x exch def
	     grestore} bd
/TextShow {CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
	/RotDiff exch def
	/Cos RotDiff cos abs def
	/Sin RotDiff sin abs def
	{
		( ) dup 0 4 -1 roll put
		dup stringwidth pop /CharWidth exch def
		Cos 0 eq {
			Text-y Sin div
		} {
			Sin 0 eq {
				CharWidth Cos div
			} {
				/H Text-y Sin div def
				/W CharWidth Cos div def
				H W lt {H} {W} ifelse
			} ifelse
		} ifelse 2 div /CharDist exch def
		CharDist 0 translate 0 0 moveto
		gsave
			RotDiff rotate
			CharWidth 2 div neg Text-y 2 div neg rmoveto
			Outline {false charpath stroke} {show} ifelse
		grestore
		CharDist 0 translate 0 0 moveto
	} forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
	  2 {CLW add 4 1 roll} repeat
	  2 {CLW sub 4 1 roll} repeat
	  initclip newpath 2 index exch 2 index exch dup 6 index exch
	  moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {/A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
	    Ux Lx sub A 0 get mul Lx add
	    Uy Ly sub A 1 get mul Ly add
	    Ux Lx sub A 2 get mul Lx add
	    Uy Ly sub A 3 get mul Ly add} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def} bd
/PageEnd {PageContext restore /InPage false def} bd
% end of preamble

% fixed controlling parameters
/Landscape false def
/Region [89.88 144.12 521.88 648.12] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/Colors [
	0
	.6
	.3
	.9
	.4
	.7
	.1
	.5
	.8
	.2
] def

% all initialization action here
I

%%EndProlog


%%Page: 1 1
A
1 St
1 Sw
1 Sc
0 Sr
42 Sp
1 Sx
.159444 .918333 .17 .863333 So
0 1 0 1 Sg
0 Sh
0 Sd
1 Sf
B
363 732 M
388 726 L
413 729 L
439 1085 L
464 939 L
489 1233 L
515 1263 L
540 1303 L
565 1322 L
591 1333 L
616 1355 L
641 1379 L
666 1384 L
692 1425 L
717 1452 L
742 1487 L
768 1473 L
793 1436 L
818 1452 L
844 1425 L
869 1449 L
894 1530 L
919 1406 L
945 1425 L
970 1417 L
995 1460 L
1021 1500 L
1046 1476 L
1071 1503 L
1096 1498 L
1122 1557 L
1147 1506 L
1172 1514 L
1198 1554 L
1223 1560 L
1248 1576 L
1274 1603 L
1299 1554 L
1324 1592 L
1349 1560 L
1375 1551 L
1400 1595 L
1425 1611 L
1451 1600 L
1476 1519 L
1501 1554 L
1527 1570 L
1552 1603 L
1577 1619 L
1602 1616 L
E
1 Sd
(Generations) 970 112 .5 T
90 Sr
90 Sh
(Food Eaten \(peak\)) 42 1085 .5 T
0 Sr
0 Sh
338 357 338 330 S
591 357 591 330 S
844 357 844 330 S
1096 357 1096 330 S
1349 357 1349 330 S
1602 357 1602 330 S
338 357 1602 357 S
(0) 338 252 .5 T
(10) 591 252 .5 T
(20) 844 252 .5 T
(30) 1096 252 .5 T
(40) 1349 252 .5 T
(50) 1602 252 .5 T
90 Sr
90 Sh
287 411 260 411 S
287 681 260 681 S
287 950 260 950 S
287 1220 260 1220 S
287 1489 260 1489 S
287 1759 260 1759 S
287 411 287 1759 S
(100) 182 411 .5 T
(200) 182 681 .5 T
(300) 182 950 .5 T
(400) 182 1220 .5 T
(500) 182 1489 .5 T
(600) 182 1759 .5 T
0 Sr
0 Sh
0 Sd
B
287 1813 M
287 357 L
1653 357 L
1653 1813 L
287 1813 L
E
2 St
B
363 654 M
388 694 L
413 721 L
439 877 L
464 950 L
489 1201 L
515 1271 L
540 1365 L
565 1330 L
591 1449 L
616 1365 L
641 1452 L
666 1444 L
692 1503 L
717 1457 L
742 1471 L
768 1519 L
793 1519 L
818 1538 L
844 1498 L
869 1527 L
894 1589 L
919 1514 L
945 1576 L
970 1595 L
995 1519 L
1021 1527 L
1046 1511 L
1071 1516 L
1096 1592 L
1122 1592 L
1147 1603 L
1172 1581 L
1198 1560 L
1223 1635 L
1248 1568 L
1274 1613 L
1299 1619 L
1324 1640 L
1349 1616 L
1375 1635 L
1400 1624 L
1425 1630 L
1451 1640 L
1476 1651 L
1501 1627 L
1527 1654 L
1552 1616 L
1577 1678 L
1602 1667 L
E
3 St
B
363 654 M
388 640 L
413 740 L
439 708 L
464 810 L
489 923 L
515 937 L
540 1036 L
565 1080 L
591 1085 L
616 961 L
641 1069 L
666 1104 L
692 1190 L
717 1247 L
742 1209 L
768 1249 L
793 1376 L
818 1371 L
844 1398 L
869 1436 L
894 1471 L
919 1473 L
945 1519 L
970 1457 L
995 1479 L
1021 1481 L
1046 1484 L
1071 1487 L
1096 1535 L
1122 1541 L
1147 1506 L
1172 1554 L
1198 1543 L
1223 1527 L
1248 1554 L
1274 1530 L
1299 1546 L
1324 1535 L
1349 1603 L
1375 1584 L
1400 1578 L
1425 1589 L
1451 1581 L
1476 1624 L
1501 1581 L
1527 1603 L
1552 1630 L
1577 1600 L
1602 1595 L
E
1 St
1 Sd
(16/6) 1729 1543 .5 T
(20/5) 1729 1651 .5 T
(25/4) 1729 1436 .5 T
Z

%%Trailer
W
%%Pages: 1
%%EndDocument

ENDPRINTCODE
9 14 Q
(Figure 13) 299.98 66.06 T
FMENDPAGE
%%EndPage: "31" 32
%%Page: "32" 32
612 792 0 FMBEGINPAGE
0 -36 468 576 R
7 X
0 K
V
0 X
0 0 -36 -0 36 468 612 BEGINPRINTCODE










































%%BeginDocument: /user/crl/elman/frame/papers/amoeba/fig14b.ps
%!PS-Adobe-1.0
%%Title: S QPE graphics
%%Creator: elman
%%CreationDate: Wed Aug  5 08:14:59 1992
%%Pages: (atend)
%%BoundingBox: 89.88 144.12 521.88 648.12
%%EndComments
% beginning of preamble
100 dict begin
/bd {bind def} def
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont} bd
/A {PageBegin} bd
/B {newpath} bd
/C {currentpoint stroke moveto} bd
/E {stroke} bd
/M {moveto} bd
/L {lineto} bd
/S {moveto lineto stroke} bd
/F {closepath fill} bd
/P {gsave moveto Pch-x Pch-y rmoveto Pch Show grestore} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd

% parameter setting commands
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sc {dup dup 1 lt exch 0 ge and
     {1 exch sub setgray}
     {1 sub Colors dup 3 1 roll length Rem floor get
	dup type /arraytype eq {aload pop sethsbcolor} {setgray} ifelse} ifelse} bd
/Sp {Pch exch 0 exch put SetPchSize} bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd

% other variable definitions
/InPage false def
/Clip 4 array def
/Page 4 array def
/Figure [0 0 1 1] def
/Plot [0 0 1 1] def
/ClipToPlot true def
/Cex 1 def
/Outline false def
/Pch 1 string def
/Pch-x 0 def
/Pch-y 0 def
/Text-y 0 def
/LineTypes [ % in default units
	[]		[1 2]		[4 4]		[8 4]
	[13 3]		[16 2 2 2]	[8 2 2 2]	[1 13]
	[6 5]		[12 4]
] def

% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
	     0 1 Array length 1 sub
	     {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
	uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
	lx ly translate Landscape {90 rotate 0 Height neg translate} if
	1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
	     newpath 0 0 moveto Pch false charpath flattenpath pathbbox
	     exch 3 1 roll
	     add 2 div neg /Pch-y exch def
	     add 2 div neg /Pch-x exch def
	     grestore} bd
/TextShow {CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
	/RotDiff exch def
	/Cos RotDiff cos abs def
	/Sin RotDiff sin abs def
	{
		( ) dup 0 4 -1 roll put
		dup stringwidth pop /CharWidth exch def
		Cos 0 eq {
			Text-y Sin div
		} {
			Sin 0 eq {
				CharWidth Cos div
			} {
				/H Text-y Sin div def
				/W CharWidth Cos div def
				H W lt {H} {W} ifelse
			} ifelse
		} ifelse 2 div /CharDist exch def
		CharDist 0 translate 0 0 moveto
		gsave
			RotDiff rotate
			CharWidth 2 div neg Text-y 2 div neg rmoveto
			Outline {false charpath stroke} {show} ifelse
		grestore
		CharDist 0 translate 0 0 moveto
	} forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
	  2 {CLW add 4 1 roll} repeat
	  2 {CLW sub 4 1 roll} repeat
	  initclip newpath 2 index exch 2 index exch dup 6 index exch
	  moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {/A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
	    Ux Lx sub A 0 get mul Lx add
	    Uy Ly sub A 1 get mul Ly add
	    Ux Lx sub A 2 get mul Lx add
	    Uy Ly sub A 3 get mul Ly add} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def} bd
/PageEnd {PageContext restore /InPage false def} bd
% end of preamble

% fixed controlling parameters
/Landscape false def
/Region [89.88 144.12 521.88 648.12] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/Colors [
	0
	.6
	.3
	.9
	.4
	.7
	.1
	.5
	.8
	.2
] def

% all initialization action here
I

%%EndProlog


%%Page: 1 1
A
1 St
1 Sw
1 Sc
0 Sr
42 Sp
1 Sx
.159444 .918333 .17 .863333 So
0 1 0 1 Sg
0 Sh
0 Sd
1 Sf
B
363 467 M
388 541 L
413 579 L
439 642 L
464 710 L
489 748 L
515 833 L
540 876 L
565 932 L
591 867 L
616 946 L
641 988 L
666 1006 L
692 986 L
717 977 L
742 1031 L
768 1074 L
793 986 L
818 1119 L
844 1085 L
869 1027 L
894 1065 L
919 1067 L
945 1020 L
970 1139 L
995 1098 L
1021 1164 L
1046 1170 L
1071 1211 L
1096 1292 L
1122 1280 L
1147 1222 L
1172 1330 L
1198 1305 L
1223 1294 L
1248 1350 L
1274 1292 L
1299 1341 L
1324 1289 L
1349 1361 L
1375 1339 L
1400 1287 L
1425 1303 L
1451 1242 L
1476 1215 L
1501 1200 L
1527 1258 L
1552 1287 L
1577 1269 L
1602 1218 L
E
1 Sd
(Generations) 970 112 .5 T
90 Sr
90 Sh
(Food Eaten \(mean\)) 42 1085 .5 T
0 Sr
0 Sh
338 357 338 330 S
591 357 591 330 S
844 357 844 330 S
1096 357 1096 330 S
1349 357 1349 330 S
1602 357 1602 330 S
338 357 1602 357 S
(0) 338 252 .5 T
(10) 591 252 .5 T
(20) 844 252 .5 T
(30) 1096 252 .5 T
(40) 1349 252 .5 T
(50) 1602 252 .5 T
90 Sr
90 Sh
287 411 260 411 S
287 636 260 636 S
287 860 260 860 S
287 1085 260 1085 S
287 1310 260 1310 S
287 1534 260 1534 S
287 1759 260 1759 S
287 411 287 1759 S
(0) 182 411 .5 T
(100) 182 636 .5 T
(200) 182 860 .5 T
(300) 182 1085 .5 T
(400) 182 1310 .5 T
(500) 182 1534 .5 T
(600) 182 1759 .5 T
0 Sr
0 Sh
0 Sd
B
287 1813 M
287 357 L
1653 357 L
1653 1813 L
287 1813 L
E
2 St
B
363 465 M
388 537 L
413 606 L
439 654 L
464 734 L
489 833 L
515 901 L
540 1018 L
565 1085 L
591 1096 L
616 1157 L
641 1170 L
666 1249 L
692 1202 L
717 1222 L
742 1197 L
768 1188 L
793 1240 L
818 1224 L
844 1263 L
869 1276 L
894 1265 L
919 1247 L
945 1296 L
970 1343 L
995 1301 L
1021 1269 L
1046 1260 L
1071 1269 L
1096 1346 L
1122 1278 L
1147 1312 L
1172 1334 L
1198 1361 L
1223 1391 L
1248 1334 L
1274 1328 L
1299 1321 L
1324 1355 L
1349 1388 L
1375 1436 L
1400 1388 L
1425 1418 L
1451 1400 L
1476 1418 L
1501 1357 L
1527 1391 L
1552 1422 L
1577 1395 L
1602 1379 L
E
3 St
B
363 465 M
388 528 L
413 575 L
439 609 L
464 651 L
489 725 L
515 692 L
540 755 L
565 766 L
591 743 L
616 766 L
641 849 L
666 883 L
692 874 L
717 912 L
742 941 L
768 1029 L
793 1049 L
818 1042 L
844 1105 L
869 1087 L
894 1161 L
919 1139 L
945 1204 L
970 1177 L
995 1227 L
1021 1222 L
1046 1191 L
1071 1175 L
1096 1161 L
1122 1209 L
1147 1242 L
1172 1305 L
1198 1276 L
1223 1321 L
1248 1312 L
1274 1323 L
1299 1341 L
1324 1323 L
1349 1368 L
1375 1391 L
1400 1341 L
1425 1388 L
1451 1325 L
1476 1404 L
1501 1334 L
1527 1359 L
1552 1406 L
1577 1418 L
1602 1409 L
E
1 St
1 Sd
(20/5) 1729 1411 .5 T
(16/6) 1729 1343 .5 T
(25/4) 1729 1220 .5 T
Z

%%Trailer
W
%%Pages: 1
%%EndDocument

ENDPRINTCODE
9 14 Q
(Figure 14) 299.98 66.06 T
FMENDPAGE
%%EndPage: "32" 33
%%Page: "33" 33
612 792 0 FMBEGINPAGE
0 -36 468 576 R
7 X
0 K
V
0 X
0 0 -36 -0 36 468 612 BEGINPRINTCODE










































%%BeginDocument: /user/crl/elman/frame/papers/amoeba/fig15b.ps
%!PS-Adobe-1.0
%%Title: S QPE graphics
%%Creator: elman
%%CreationDate: Wed Aug  5 08:15:05 1992
%%Pages: (atend)
%%BoundingBox: 89.88 144.12 521.88 648.12
%%EndComments
% beginning of preamble
100 dict begin
/bd {bind def} def
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont} bd
/A {PageBegin} bd
/B {newpath} bd
/C {currentpoint stroke moveto} bd
/E {stroke} bd
/M {moveto} bd
/L {lineto} bd
/S {moveto lineto stroke} bd
/F {closepath fill} bd
/P {gsave moveto Pch-x Pch-y rmoveto Pch Show grestore} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd

% parameter setting commands
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sc {dup dup 1 lt exch 0 ge and
     {1 exch sub setgray}
     {1 sub Colors dup 3 1 roll length Rem floor get
	dup type /arraytype eq {aload pop sethsbcolor} {setgray} ifelse} ifelse} bd
/Sp {Pch exch 0 exch put SetPchSize} bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd

% other variable definitions
/InPage false def
/Clip 4 array def
/Page 4 array def
/Figure [0 0 1 1] def
/Plot [0 0 1 1] def
/ClipToPlot true def
/Cex 1 def
/Outline false def
/Pch 1 string def
/Pch-x 0 def
/Pch-y 0 def
/Text-y 0 def
/LineTypes [ % in default units
	[]		[1 2]		[4 4]		[8 4]
	[13 3]		[16 2 2 2]	[8 2 2 2]	[1 13]
	[6 5]		[12 4]
] def

% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
	     0 1 Array length 1 sub
	     {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
	uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
	lx ly translate Landscape {90 rotate 0 Height neg translate} if
	1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
	     newpath 0 0 moveto Pch false charpath flattenpath pathbbox
	     exch 3 1 roll
	     add 2 div neg /Pch-y exch def
	     add 2 div neg /Pch-x exch def
	     grestore} bd
/TextShow {CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
	/RotDiff exch def
	/Cos RotDiff cos abs def
	/Sin RotDiff sin abs def
	{
		( ) dup 0 4 -1 roll put
		dup stringwidth pop /CharWidth exch def
		Cos 0 eq {
			Text-y Sin div
		} {
			Sin 0 eq {
				CharWidth Cos div
			} {
				/H Text-y Sin div def
				/W CharWidth Cos div def
				H W lt {H} {W} ifelse
			} ifelse
		} ifelse 2 div /CharDist exch def
		CharDist 0 translate 0 0 moveto
		gsave
			RotDiff rotate
			CharWidth 2 div neg Text-y 2 div neg rmoveto
			Outline {false charpath stroke} {show} ifelse
		grestore
		CharDist 0 translate 0 0 moveto
	} forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
	  2 {CLW add 4 1 roll} repeat
	  2 {CLW sub 4 1 roll} repeat
	  initclip newpath 2 index exch 2 index exch dup 6 index exch
	  moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {/A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
	    Ux Lx sub A 0 get mul Lx add
	    Uy Ly sub A 1 get mul Ly add
	    Ux Lx sub A 2 get mul Lx add
	    Uy Ly sub A 3 get mul Ly add} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def} bd
/PageEnd {PageContext restore /InPage false def} bd
% end of preamble

% fixed controlling parameters
/Landscape false def
/Region [89.88 144.12 521.88 648.12] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/Colors [
	0
	.6
	.3
	.9
	.4
	.7
	.1
	.5
	.8
	.2
] def

% all initialization action here
I

%%EndProlog


%%Page: 1 1
A
1 St
1 Sw
1 Sc
0 Sr
42 Sp
1 Sx
.159444 .918333 .17 .863333 So
0 1 0 1 Sg
0 Sh
0 Sd
1 Sf
B
363 838 M
388 797 L
413 856 L
439 923 L
464 979 L
489 964 L
515 991 L
540 1011 L
565 1067 L
591 1042 L
616 1200 L
641 1168 L
666 1343 L
692 1330 L
717 1283 L
742 1256 L
768 1355 L
793 1292 L
818 1341 L
844 1334 L
869 1384 L
894 1433 L
919 1375 L
945 1409 L
970 1404 L
995 1431 L
1021 1476 L
1046 1379 L
1071 1460 L
1096 1384 L
1122 1498 L
1147 1503 L
1172 1460 L
1198 1485 L
1223 1480 L
1248 1456 L
1274 1489 L
1299 1487 L
1324 1489 L
1349 1539 L
1375 1505 L
1400 1521 L
1425 1489 L
1451 1561 L
1476 1539 L
1501 1505 L
1527 1555 L
1552 1541 L
1577 1525 L
1602 1539 L
E
1 Sd
(Generations) 970 112 .5 T
90 Sr
90 Sh
(Food Eaten \(mean\)) 42 1085 .5 T
0 Sr
0 Sh
338 357 338 330 S
591 357 591 330 S
844 357 844 330 S
1096 357 1096 330 S
1349 357 1349 330 S
1602 357 1602 330 S
338 357 1602 357 S
(0) 338 252 .5 T
(10) 591 252 .5 T
(20) 844 252 .5 T
(30) 1096 252 .5 T
(40) 1349 252 .5 T
(50) 1602 252 .5 T
90 Sr
90 Sh
287 411 260 411 S
287 636 260 636 S
287 860 260 860 S
287 1085 260 1085 S
287 1310 260 1310 S
287 1534 260 1534 S
287 1759 260 1759 S
287 411 287 1759 S
(0) 182 411 .5 T
(100) 182 636 .5 T
(200) 182 860 .5 T
(300) 182 1085 .5 T
(400) 182 1310 .5 T
(500) 182 1534 .5 T
(600) 182 1759 .5 T
0 Sr
0 Sh
0 Sd
B
287 1813 M
287 357 L
1653 357 L
1653 1813 L
287 1813 L
E
2 St
B
363 838 M
388 872 L
413 894 L
439 1024 L
464 1085 L
489 1294 L
515 1352 L
540 1431 L
565 1402 L
591 1501 L
616 1431 L
641 1503 L
666 1496 L
692 1546 L
717 1507 L
742 1519 L
768 1559 L
793 1559 L
818 1575 L
844 1541 L
869 1566 L
894 1618 L
919 1555 L
945 1606 L
970 1622 L
995 1559 L
1021 1566 L
1046 1552 L
1071 1557 L
1096 1620 L
1122 1620 L
1147 1629 L
1172 1611 L
1198 1593 L
1223 1656 L
1248 1600 L
1274 1638 L
1299 1642 L
1324 1660 L
1349 1640 L
1375 1656 L
1400 1647 L
1425 1651 L
1451 1660 L
1476 1669 L
1501 1649 L
1527 1671 L
1552 1640 L
1577 1692 L
1602 1683 L
E
3 St
B
363 838 M
388 849 L
413 930 L
439 1134 L
464 1139 L
489 1195 L
515 1310 L
540 1296 L
565 1424 L
591 1413 L
616 1436 L
641 1456 L
666 1471 L
692 1492 L
717 1570 L
742 1507 L
768 1539 L
793 1519 L
818 1552 L
844 1539 L
869 1528 L
894 1525 L
919 1523 L
945 1505 L
970 1523 L
995 1514 L
1021 1539 L
1046 1512 L
1071 1528 L
1096 1552 L
1122 1584 L
1147 1548 L
1172 1573 L
1198 1586 L
1223 1546 L
1248 1555 L
1274 1575 L
1299 1548 L
1324 1582 L
1349 1575 L
1375 1575 L
1400 1586 L
1425 1597 L
1451 1602 L
1476 1597 L
1501 1609 L
1527 1615 L
1552 1613 L
1577 1638 L
1602 1649 L
E
1 St
1 Sd
(2) 1729 1579 .5 T
(5) 1729 1669 .5 T
(8) 1729 1489 .5 T
Z

%%Trailer
W
%%Pages: 1
%%EndDocument

ENDPRINTCODE
9 14 Q
(Figure 15) 297 66.06 T
FMENDPAGE
%%EndPage: "33" 34
%%Page: "34" 34
612 792 0 FMBEGINPAGE
0 -36 468 576 R
7 X
0 K
V
0 X
0 0 -36 -0 36 468 612 BEGINPRINTCODE










































%%BeginDocument: /user/crl/elman/frame/papers/amoeba/fig16b.ps
%!PS-Adobe-1.0
%%Title: S QPE graphics
%%Creator: elman
%%CreationDate: Wed Aug  5 08:15:10 1992
%%Pages: (atend)
%%BoundingBox: 89.88 144.12 521.88 648.12
%%EndComments
% beginning of preamble
100 dict begin
/bd {bind def} def
% drawing commands
/I {Coord SetPage 1 setlinecap 1 setlinejoin
    LineTypes {RastersPerPoint ScaleArray} forall
    /Helvetica findfont
    PointSize RastersPerPoint mul Cex mul scalefont setfont} bd
/A {PageBegin} bd
/B {newpath} bd
/C {currentpoint stroke moveto} bd
/E {stroke} bd
/M {moveto} bd
/L {lineto} bd
/S {moveto lineto stroke} bd
/F {closepath fill} bd
/P {gsave moveto Pch-x Pch-y rmoveto Pch Show grestore} bd
/T {/Adjust exch def gsave translate StringRot rotate 0 0 moveto
    dup stringwidth pop neg Adjust mul 0 rmoveto
    currentpoint translate TextShow grestore} bd
/X {erasepage InPage {PageEnd} if} bd
/Z {gsave showpage grestore PageEnd} bd
/W {end} bd

% parameter setting commands
/St {1 sub LineTypes dup 3 1 roll length Rem floor get 0 setdash} bd
/Sw {abs 2 div RastersPerPoint mul setlinewidth SetClip} bd
/Sc {dup dup 1 lt exch 0 ge and
     {1 exch sub setgray}
     {1 sub Colors dup 3 1 roll length Rem floor get
	dup type /arraytype eq {aload pop sethsbcolor} {setgray} ifelse} ifelse} bd
/Sp {Pch exch 0 exch put SetPchSize} bd
/Sx {dup Cex div /Ratio exch def
     /Cex exch def
     currentfont Ratio scalefont setfont
     /Pch-x Pch-x Ratio mul def
     /Pch-y Pch-y Ratio mul def
     /Text-y Text-y Ratio mul def} bd
/So {4 1 roll exch 4 -1 roll Plot astore pop SetClip} bd
/Sg {4 1 roll exch 4 -1 roll Figure astore pop SetClip} bd
/Sr {/StringRot exch def} bd
/Sh {/CharRot exch def} bd
/Sd {0 eq /ClipToPlot exch def SetClip} bd
/Sf {dup 0 lt /Outline exch def abs
     1 sub Fonts dup 3 1 roll length Rem floor get
     findfont PointSize Cex mul RastersPerPoint mul scalefont dup setfont
     dup /FontMatrix get /Matrix exch def /FontBBox get aload pop
     Matrix transform 4 2 roll Matrix transform
     exch pop add /Text-y exch def pop SetPchSize} bd

% other variable definitions
/InPage false def
/Clip 4 array def
/Page 4 array def
/Figure [0 0 1 1] def
/Plot [0 0 1 1] def
/ClipToPlot true def
/Cex 1 def
/Outline false def
/Pch 1 string def
/Pch-x 0 def
/Pch-y 0 def
/Text-y 0 def
/LineTypes [ % in default units
	[]		[1 2]		[4 4]		[8 4]
	[13 3]		[16 2 2 2]	[8 2 2 2]	[1 13]
	[6 5]		[12 4]
] def

% other procedure definitions
/Rem {2 copy div floor mul sub floor cvi} bd
/RastersPerPoint {RastersPerInch 72 div} bd
/ScaleArray {/Factor exch def /Array exch def
	     0 1 Array length 1 sub
	     {dup Array exch get Factor mul Array 3 1 roll put} for} bd
/Coord {Region aload pop /uy exch def /ux exch def /ly exch def /lx exch def
	uy ly sub ux lx sub Landscape {exch} if /Width exch def /Height exch def
	lx ly translate Landscape {90 rotate 0 Height neg translate} if
	1 RastersPerPoint div dup scale} bd
/SetPchSize {gsave
	     newpath 0 0 moveto Pch false charpath flattenpath pathbbox
	     exch 3 1 roll
	     add 2 div neg /Pch-y exch def
	     add 2 div neg /Pch-x exch def
	     grestore} bd
/TextShow {CharRot StringRot sub dup 0 eq {pop SimpleShow} {FancyShow} ifelse} bd
/SimpleShow {0 Text-y 2 div neg rmoveto Show} bd
/FancyShow {
	/RotDiff exch def
	/Cos RotDiff cos abs def
	/Sin RotDiff sin abs def
	{
		( ) dup 0 4 -1 roll put
		dup stringwidth pop /CharWidth exch def
		Cos 0 eq {
			Text-y Sin div
		} {
			Sin 0 eq {
				CharWidth Cos div
			} {
				/H Text-y Sin div def
				/W CharWidth Cos div def
				H W lt {H} {W} ifelse
			} ifelse
		} ifelse 2 div /CharDist exch def
		CharDist 0 translate 0 0 moveto
		gsave
			RotDiff rotate
			CharWidth 2 div neg Text-y 2 div neg rmoveto
			Outline {false charpath stroke} {show} ifelse
		grestore
		CharDist 0 translate 0 0 moveto
	} forall
} bd
/Show {Outline {false charpath stroke} {show} ifelse} bd
/BoxClip {/CLW currentlinewidth def
	  2 {CLW add 4 1 roll} repeat
	  2 {CLW sub 4 1 roll} repeat
	  initclip newpath 2 index exch 2 index exch dup 6 index exch
	  moveto 3 {lineto} repeat closepath clip newpath} bd
/Subregion {/A exch def /Uy exch def /Ux exch def /Ly exch def /Lx exch def
	    Ux Lx sub A 0 get mul Lx add
	    Uy Ly sub A 1 get mul Ly add
	    Ux Lx sub A 2 get mul Lx add
	    Uy Ly sub A 3 get mul Ly add} bd
/SetFigure {Page aload pop Figure Subregion} bd
/SetPlot {SetFigure Plot Subregion} bd
/SetClip {ClipToPlot {SetPlot} {SetFigure} ifelse BoxClip} bd
/SetPage {0 0 Width Height Page astore RastersPerPoint ScaleArray} bd
/PageBegin {save /PageContext exch def /InPage true def} bd
/PageEnd {PageContext restore /InPage false def} bd
% end of preamble

% fixed controlling parameters
/Landscape false def
/Region [89.88 144.12 521.88 648.12] def
/RastersPerInch 300 def
/PointSize 14 def
/Fonts [
	/Helvetica
	/Courier
	/Times-Roman
	/Helvetica-Oblique
	/Helvetica-Bold
	/Helvetica-BoldOblique
	/Courier-Oblique
	/Courier-Bold
	/Courier-BoldOblique
	/Times-Italic
	/Times-Bold
	/Times-BoldItalic
	/Symbol
	/AvantGarde-Book
	/AvantGarde-BookOblique
	/AvantGarde-Demi
	/AvantGarde-DemiOblique
	/Bookman-Demi
	/Bookman-DemiItalic
	/Bookman-Light
	/Bookman-LightItalic
	/Helvetica-Narrow
	/Helvetica-Narrow-Bold
	/Helvetica-Narrow-BoldOblique
	/Helvetica-Narrow-Oblique
	/NewCenturySchlbk-Roman
	/NewCenturySchlbk-Bold
	/NewCenturySchlbk-Italic
	/NewCenturySchlbk-BoldItalic
	/Palatino-Roman
	/Palatino-Bold
	/Palatino-Italic
	/Palatino-BoldItalic
	/ZapfChancery-MediumItalic
	/ZapfDingbats
] def
/Colors [
	0
	.6
	.3
	.9
	.4
	.7
	.1
	.5
	.8
	.2
] def

% all initialization action here
I

%%EndProlog


%%Page: 1 1
A
1 St
1 Sw
1 Sc
0 Sr
42 Sp
1 Sx
.159444 .918333 .17 .863333 So
0 1 0 1 Sg
0 Sh
0 Sd
1 Sf
B
363 465 M
388 532 L
413 591 L
439 606 L
464 710 L
489 710 L
515 694 L
540 741 L
565 755 L
591 773 L
616 809 L
641 829 L
666 854 L
692 896 L
717 914 L
742 946 L
768 894 L
793 925 L
818 982 L
844 928 L
869 1006 L
894 1013 L
919 984 L
945 1047 L
970 984 L
995 993 L
1021 995 L
1046 934 L
1071 952 L
1096 1049 L
1122 1105 L
1147 1083 L
1172 1098 L
1198 1112 L
1223 988 L
1248 1020 L
1274 1011 L
1299 1036 L
1324 1049 L
1349 1063 L
1375 1123 L
1400 1143 L
1425 1096 L
1451 1204 L
1476 1128 L
1501 1195 L
1527 1155 L
1552 1168 L
1577 1125 L
1602 1204 L
E
1 Sd
(Generations) 970 112 .5 T
90 Sr
90 Sh
(Food Eaten \(mean\)) 42 1085 .5 T
0 Sr
0 Sh
338 357 338 330 S
591 357 591 330 S
844 357 844 330 S
1096 357 1096 330 S
1349 357 1349 330 S
1602 357 1602 330 S
338 357 1602 357 S
(0) 338 252 .5 T
(10) 591 252 .5 T
(20) 844 252 .5 T
(30) 1096 252 .5 T
(40) 1349 252 .5 T
(50) 1602 252 .5 T
90 Sr
90 Sh
287 411 260 411 S
287 636 260 636 S
287 860 260 860 S
287 1085 260 1085 S
287 1310 260 1310 S
287 1534 260 1534 S
287 1759 260 1759 S
287 411 287 1759 S
(0) 182 411 .5 T
(100) 182 636 .5 T
(200) 182 860 .5 T
(300) 182 1085 .5 T
(400) 182 1310 .5 T
(500) 182 1534 .5 T
(600) 182 1759 .5 T
0 Sr
0 Sh
0 Sd
B
287 1813 M
287 357 L
1653 357 L
1653 1813 L
287 1813 L
E
2 St
B
363 465 M
388 537 L
413 606 L
439 654 L
464 734 L
489 833 L
515 901 L
540 1018 L
565 1085 L
591 1096 L
616 1157 L
641 1170 L
666 1249 L
692 1202 L
717 1222 L
742 1197 L
768 1188 L
793 1240 L
818 1224 L
844 1263 L
869 1276 L
894 1265 L
919 1247 L
945 1296 L
970 1343 L
995 1301 L
1021 1269 L
1046 1260 L
1071 1269 L
1096 1346 L
1122 1278 L
1147 1312 L
1172 1334 L
1198 1361 L
1223 1391 L
1248 1334 L
1274 1328 L
1299 1321 L
1324 1355 L
1349 1388 L
1375 1436 L
1400 1388 L
1425 1418 L
1451 1400 L
1476 1418 L
1501 1357 L
1527 1391 L
1552 1422 L
1577 1395 L
1602 1379 L
E
3 St
B
363 465 M
388 528 L
413 561 L
439 640 L
464 685 L
489 752 L
515 838 L
540 903 L
565 1011 L
591 1018 L
616 1092 L
641 1101 L
666 1060 L
692 1114 L
717 1193 L
742 1168 L
768 1134 L
793 1240 L
818 1159 L
844 1191 L
869 1170 L
894 1159 L
919 1177 L
945 1170 L
970 1182 L
995 1119 L
1021 1175 L
1046 1213 L
1071 1211 L
1096 1218 L
1122 1238 L
1147 1292 L
1172 1251 L
1198 1278 L
1223 1325 L
1248 1296 L
1274 1298 L
1299 1328 L
1324 1379 L
1349 1357 L
1375 1332 L
1400 1296 L
1425 1321 L
1451 1402 L
1476 1409 L
1501 1373 L
1527 1418 L
1552 1404 L
1577 1402 L
1602 1384 L
E
1 St
1 Sd
(5) 1729 1411 .5 T
(8) 1729 1343 .5 T
(2) 1729 1220 .5 T
Z

%%Trailer
W
%%Pages: 1
%%EndDocument

ENDPRINTCODE
9 14 Q
(Figure 16) 297 70.8 T
FMENDPAGE
%%EndPage: "34" 35
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 34 1
%%DocumentFonts: Helvetica-Bold
%%+ Helvetica
%%+ Helvetica-Oblique
%%+ NewCenturySchlbk-Roman
%%+ NewCenturySchlbk-Italic
%%+ Times-Roman
%%+ Times-Italic
%%+ AvantGarde-DemiOblique
%%+ Helvetica-BoldOblique
%%+ Helvetica-Narrow-Bold
